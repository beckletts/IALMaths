{"ast":null,"code":"import _objectSpread from\"/Users/leebeckett/Cursor/IALFinal/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React,{useState}from'react';import ReactGA from'react-ga4';import{units}from'../data/units';import SelectedUnitsPanel from'./SelectedUnitsPanel';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Calculator(_ref){let{selectedUnits,setSelectedUnits,result,setResult,expandStates,setExpandStates,onStartOver}=_ref;const[qualificationMode,setQualificationMode]=useState('standard');// 'standard' or 'dual'\nconst[selectedQualification,setSelectedQualification]=useState('ial+ias');const[showQualOptions,setShowQualOptions]=useState(false);const toggleExpand=section=>{// Track section expansion/collapse\nReactGA.event({category:'UI',action:expandStates[section]?'Collapse Section':'Expand Section',label:section});setExpandStates(_objectSpread(_objectSpread({},expandStates),{},{[section]:!expandStates[section]}));};const toggleUnit=unitCode=>{// Track unit selection/deselection\nReactGA.event({category:'Unit',action:selectedUnits.includes(unitCode)?'Deselect Unit':'Select Unit',label:unitCode});if(selectedUnits.includes(unitCode)){setSelectedUnits(selectedUnits.filter(code=>code!==unitCode));}else{setSelectedUnits([...selectedUnits,unitCode]);}};const checkIALEligibility=()=>{try{// Track the eligibility check event\nReactGA.event({category:'Calculator',action:'Check Eligibility',label:JSON.stringify({units:selectedUnits,mode:qualificationMode,qualification:selectedQualification})});if(selectedUnits.length===0){throw new Error(\"Please select at least one unit\");}if(qualificationMode==='standard'){checkStandardEligibility();}else{checkDualEligibility();}}catch(error){// Track errors in eligibility check\nReactGA.event({category:'Error',action:'Eligibility Check Error',label:error.message});setResult({eligible:false,message:error.message});}};const checkStandardEligibility=()=>{// Check Further Pure requirements first\nconst hasFP1=selectedUnits.includes(\"FP1\");// Count further pure units (FP1, FP2, FP3)\nconst furtherPureUnits=[\"FP1\",\"FP2\",\"FP3\"].filter(unit=>selectedUnits.includes(unit));// Count all applied units\nconst appliedUnits=[\"S1\",\"S2\",\"S3\",\"M1\",\"M2\",\"M3\",\"D1\"].filter(unit=>selectedUnits.includes(unit));// For XFM01 (IAS Further Mathematics)\n// Must have FP1 plus two additional units (can be further pure or applied)\nconst totalAdditionalUnits=furtherPureUnits.length-1+appliedUnits.length;// -1 because we don't count FP1 twice\nconst isEligibleForXFM01=hasFP1&&totalAdditionalUnits>=2;// Check XFM01 eligibility first\nif(isEligibleForXFM01){setResult({eligible:true,message:\"You are eligible for the IAS Further Mathematics qualification (XFM01)!\",qualification:\"IAS Further Mathematics (XFM01)\"});return;}// If they have FP1 but not enough units, give specific guidance\nif(hasFP1){const unitsNeeded=2-totalAdditionalUnits;setResult({eligible:false,message:\"You have FP1 but need \".concat(unitsNeeded,\" more unit\").concat(unitsNeeded>1?'s':'',\" (either Further Pure or Applied) to be eligible for IAS Further Mathematics (XFM01).\")});return;}// Only check Pure Mathematics requirements if not eligible for Further Mathematics\nconst pureUnits=[\"P1\",\"P2\",\"P3\",\"P4\"];const selectedPureUnits=pureUnits.filter(unit=>selectedUnits.includes(unit));const hasPureComplete=pureUnits.every(unit=>selectedUnits.includes(unit));// Check for AS Level eligibility (P1, P2 and one applied)\nconst hasP1P2=[\"P1\",\"P2\"].every(unit=>selectedUnits.includes(unit));// Check for valid applied pairs for IAL\nconst validPairs=[[\"S1\",\"S2\"],[\"M1\",\"M2\"],[\"S1\",\"M1\"],[\"S1\",\"D1\"],[\"M1\",\"D1\"]];const hasValidPair=validPairs.some(pair=>pair.every(unit=>selectedUnits.includes(unit)));// Check if user is eligible for IAS Mathematics\nconst isEligibleForIAS=hasP1P2&&appliedUnits.length>=1;if(!hasPureComplete&&isEligibleForIAS){setResult({eligible:true,message:\"You are eligible for the IAS Mathematics qualification (XMA01), but not for the full IAL Mathematics (YMA01).\",qualification:\"IAS Mathematics (XMA01)\",alternativeMessage:\"To be eligible for IAL Mathematics (YMA01), you need to complete all Pure units (P1-P4) and have a valid applied pair.\"});return;}if(!hasPureComplete){let message=\"Missing one or more required Pure Mathematics units (P1-P4)\";// If they have some pure units, be more specific\nif(selectedPureUnits.length>0){const missingUnits=pureUnits.filter(unit=>!selectedUnits.includes(unit));message=\"Missing \".concat(missingUnits.join(\", \"),\" from the required Pure Mathematics units\");}// Add recommendations if they're close to IAS\nif(selectedPureUnits.length>=1){const neededForIAS=[];if(!selectedUnits.includes(\"P1\"))neededForIAS.push(\"P1\");if(!selectedUnits.includes(\"P2\"))neededForIAS.push(\"P2\");if(appliedUnits.length===0)neededForIAS.push(\"one applied unit\");message+=\". You could aim for IAS Mathematics (XMA01) by adding \".concat(neededForIAS.join(\" and \"),\".\");}setResult({eligible:false,message:message});return;}if(!hasValidPair){// Construct helpful message about what pairs they could add\nlet message=\"Missing a valid applied pair. You need one of: \";const possiblePairs=[];validPairs.forEach(pair=>{const havePair=pair.filter(unit=>selectedUnits.includes(unit));const missingFromPair=pair.filter(unit=>!selectedUnits.includes(unit));if(havePair.length===1){possiblePairs.push(\"\".concat(havePair[0],\"+\").concat(missingFromPair[0]));}else if(havePair.length===0){possiblePairs.push(\"\".concat(pair[0],\"+\").concat(pair[1]));}});message+=possiblePairs.join(\", \");setResult({eligible:false,message:message});return;}setResult({eligible:true,message:\"You are eligible for the IAL Mathematics qualification (YMA01)!\"});};const checkDualEligibility=()=>{// Check Further Pure requirements first\nconst hasFP1=selectedUnits.includes(\"FP1\");// Count further pure units (FP1, FP2, FP3)\nconst furtherPureUnits=[\"FP1\",\"FP2\",\"FP3\"].filter(unit=>selectedUnits.includes(unit));// Count all applied units\nconst appliedUnits=[\"S1\",\"S2\",\"S3\",\"M1\",\"M2\",\"M3\",\"D1\"].filter(unit=>selectedUnits.includes(unit));// For XFM01 (IAS Further Mathematics)\n// Must have FP1 plus two additional units (can be further pure or applied)\nconst totalAdditionalUnits=furtherPureUnits.length-1+appliedUnits.length;// -1 because we don't count FP1 twice\nconst isEligibleForXFM01=hasFP1&&totalAdditionalUnits>=2;// Check XFM01 eligibility first\nif(isEligibleForXFM01){setResult({eligible:true,message:\"You are eligible for the IAS Further Mathematics qualification (XFM01)!\",qualification:\"IAS Further Mathematics (XFM01)\"});return;}// If they have FP1 but not enough units, give specific guidance\nif(hasFP1){const unitsNeeded=2-totalAdditionalUnits;setResult({eligible:false,message:\"You have FP1 but need \".concat(unitsNeeded,\" more unit\").concat(unitsNeeded>1?'s':'',\" (either Further Pure or Applied) to be eligible for IAS Further Mathematics (XFM01).\")});return;}// Only check Pure Mathematics requirements if not eligible for Further Mathematics\nconst pureUnits=[\"P1\",\"P2\",\"P3\",\"P4\"];const hasPureComplete=pureUnits.every(unit=>selectedUnits.includes(unit));const hasP1P2=[\"P1\",\"P2\"].every(unit=>selectedUnits.includes(unit));// Check for valid applied pairs for IAL\nconst validPairs=[[\"S1\",\"S2\"],[\"M1\",\"M2\"],[\"S1\",\"M1\"],[\"S1\",\"D1\"],[\"M1\",\"D1\"]];const hasValidPair=validPairs.some(pair=>pair.every(unit=>selectedUnits.includes(unit)));// Check if eligible for IAS Mathematics (XMA01)\nconst isEligibleForXMA01=hasP1P2&&appliedUnits.length>=1;// Check if eligible for Pure Mathematics (YPM01)\nconst isEligibleForYPM01=hasPureComplete;// Check if student can get YMA01 (P1-P4 + valid applied pair)\nconst canGetYMA01=hasPureComplete&&hasValidPair;// Check YMA01 and YPM01 conflict\nif(isEligibleForYPM01&&canGetYMA01){setResult({eligible:false,message:\"Unfortunately, you are not eligible to proceed at this time. While you have sufficient units for both the YMA01 and YPM01 qualifications, these two qualifications cannot be cashed in during the same exam series.\"});return;}// Check Pure Mathematics requirements if not eligible for Further Mathematics\nif(!hasPureComplete){let message=\"Missing one or more required Pure Mathematics units (P1-P4)\";// Add recommendations for Further Mathematics if they're close\nif(hasFP1){message+=\". However, you could aim for IAS Further Mathematics (XFM01) by adding \"+(totalAdditionalUnits===0?\"two more units\":totalAdditionalUnits===1?\"one more unit\":\"\");}setResult({eligible:false,message:message});return;}// Check if eligible for IAS Mathematics alone\nconst isEligibleForIAS=hasP1P2&&appliedUnits.length>=1;if(!hasPureComplete&&!hasFP1){// Neither IAL Math nor IAS Further Math requirements met\nlet message=\"Missing required Pure Mathematics units (P1-P4) for IAL Mathematics and FP1 for IAS Further Mathematics\";if(isEligibleForIAS){message=\"You are eligible for IAS Mathematics (XMA01) only. To qualify for dual qualifications, you need all Pure units (P1-P4) and FP1 plus additional units.\";}setResult({eligible:false,message:message});return;}if(!hasFP1){setResult({eligible:false,message:\"FP1 is required for IAS Further Mathematics. You qualify for IAL Mathematics (YMA01) but not for the Further Mathematics component.\"});return;}// Need at least 2 more units beyond FP1\nconst additionalUnitsNeeded=2;const additionalUnitsAvailable=totalAdditionalUnits;if(additionalUnitsAvailable<additionalUnitsNeeded){setResult({eligible:false,message:\"You need \".concat(additionalUnitsNeeded,\" additional units beyond FP1 for IAS Further Mathematics. You currently have \").concat(additionalUnitsAvailable,\". You qualify for IAL Mathematics (YMA01) but need more units for Further Mathematics.\")});return;}setResult({eligible:true,message:\"You are eligible for both IAL Mathematics (YMA01) and IAS Further Mathematics (YFM01) qualifications!\"});};const renderModeSelector=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-[#4A1D7A] mb-3\",children:\"Qualification Mode\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex flex-wrap gap-2 mb-4\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 rounded-md \".concat(qualificationMode==='standard'?'bg-[#4A1D7A] text-white':'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'),onClick:()=>setQualificationMode('standard'),children:\"Standard Mathematics Eligibility\"}),/*#__PURE__*/_jsx(\"button\",{className:\"px-4 py-2 rounded-md \".concat(qualificationMode==='dual'?'bg-[#4A1D7A] text-white':'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'),onClick:()=>setQualificationMode('dual'),children:\"Dual Qualification Mode\"})]}),qualificationMode==='standard'?/*#__PURE__*/_jsx(\"div\",{className:\"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-[#111827]\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Standard Mode:\"}),\" Check eligibility for Mathematics (YMA01), Further Mathematics (YFM01), or IAS Further Mathematics qualifications. This mode now includes support for qualification combinations and transfer of credit options.\"]})}):/*#__PURE__*/_jsx(\"div\",{className:\"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\",children:/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-[#111827]\",children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Dual Qualification Mode:\"}),\" Check if you are eligible to obtain both Mathematics (YMA01) and Further Mathematics (YFM01) qualifications with the selected units. This mode helps properly allocate units between the two qualifications.\"]})})]});const renderInfoBanner=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#ECFDF5] p-4 rounded-lg mb-6 border border-[#059669]\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-[#111827]\",children:\"Important Information About Unit Aggregation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1 text-[#111827]\",children:\"When combining different qualifications (e.g., IAL Mathematics with IAS Further Mathematics), you must ensure proper unit aggregation. Units previously cashed in may need to be uncashed before being used in a new qualification.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2 text-[#111827]\",children:\"Please also make sure the candidate's UCI number and personal details are the same across all series to ensure proper unit aggregation.\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-[#0369A1] hover:underline text-sm font-medium mt-2 inline-block\",children:\"View detailed aggregation guidance\"})]});const renderQualificationSelector=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:()=>setShowQualOptions(!showQualOptions),className:\"w-full flex items-center justify-between bg-[#9B7FCB] hover:bg-[#4A1D7A] text-white p-3 rounded-md cursor-pointer transition-colors\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-medium\",children:\"Additional Qualification Options\"}),/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 transition-transform \".concat(showQualOptions?'transform rotate-180':''),fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeWidth:\"2\",d:\"M19 9l-7 7-7-7\"})})]}),showQualOptions&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-3 border border-[#9B7FCB] rounded-md p-4 bg-white\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"mb-3 text-sm\",children:\"Select the combination of qualifications you are aiming for:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-3\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-md cursor-pointer border \".concat(selectedQualification==='ial+ias'?'bg-[#ECFDF5] border-[#059669]':'bg-white border-gray-300 hover:bg-[#F3F4F6]'),onClick:()=>setSelectedQualification('ial+ias'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold\",children:\"IAL Mathematics + IAS Further Mathematics\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-700\",children:\"Full A Level Mathematics with AS Level Further Mathematics\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"p-4 rounded-md cursor-pointer border \".concat(selectedQualification==='transfer'?'bg-[#ECFDF5] border-[#059669]':'bg-white border-gray-300 hover:bg-[#F3F4F6]'),onClick:()=>setSelectedQualification('transfer'),children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold\",children:\"Transfer of Credit\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-700\",children:\"Using qualifications from other exam boards\"})]})]}),selectedQualification==='ial+ias'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#FEF9C3] p-4 rounded-lg mt-4 border-l-4 border-[#CA8A04]\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-[#111827]\",children:\"Important Reminder for IAL + IAS Combinations\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1 text-[#111827]\",children:\"If you have previously cashed in IAS Mathematics or Further Mathematics, you must uncash these qualifications when cashing in the IAL options to allow reaggregation of units.\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-2 text-[#111827]\",children:\"Your examination officer can help with the uncashing process, which must be completed before the IAL qualification can be awarded.\"})]}),selectedQualification==='transfer'&&/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#E6F7FF] p-4 rounded-lg mt-4 border border-[#0369A1]\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-[#111827]\",children:\"Transfer of Credit Information\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm mt-1 text-[#111827]\",children:\"If you are cashing in Edexcel IAL Mathematics with units from another exam board, you'll need to follow the Transfer of Credit process.\"}),/*#__PURE__*/_jsx(\"a\",{href:\"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"text-sm mt-2 text-[#0369A1] hover:underline inline-block\",children:\"Visit the Transfer of Credit page \\u2192\"}),/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold mt-4 text-[#111827]\",children:\"Transfer of Credit Key Points:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 text-sm mt-1 text-[#111827]\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"You must apply for Transfer of Credit before the qualification can be awarded\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Applications must be made via your examination officer\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Evidence of the previously achieved qualification must be provided\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Check deadline dates carefully - applications must be received before results day\"})]})]}),selectedQualification==='ial+ias'&&/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4\",children:[/*#__PURE__*/_jsx(\"h4\",{className:\"font-semibold text-[#111827]\",children:\"IAL Mathematics + IAS Further Mathematics Requirements:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-2\",children:[/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-[#111827]\",children:\"For IAL Mathematics:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 text-sm text-[#111827]\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"P1, P2, P3, and P4\"}),/*#__PURE__*/_jsx(\"li\",{children:\"One valid pair from the applied units\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h5\",{className:\"font-medium text-[#111827]\",children:\"For IAS Further Mathematics:\"}),/*#__PURE__*/_jsxs(\"ul\",{className:\"list-disc pl-5 text-sm text-[#111827]\",children:[/*#__PURE__*/_jsx(\"li\",{children:\"FP1 is required\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Two more units (cannot include P1-P4)\"})]})]})]})]})]})]});const renderSection=(sectionKey,title,unitList)=>/*#__PURE__*/_jsxs(\"div\",{className:\"mb-6\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-between bg-[#4A1D7A] p-3 rounded-t-md cursor-pointer\",onClick:()=>toggleExpand(sectionKey),children:[/*#__PURE__*/_jsx(\"h3\",{className:\"text-white font-medium\",children:title}),/*#__PURE__*/_jsx(\"svg\",{className:\"w-5 h-5 text-white transition-transform \".concat(expandStates[sectionKey]?'transform rotate-180':''),fill:\"none\",viewBox:\"0 0 24 24\",stroke:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{strokeLinecap:\"round\",strokeWidth:\"2\",d:\"M19 9l-7 7-7-7\"})})]}),expandStates[sectionKey]&&/*#__PURE__*/_jsx(\"div\",{className:\"bg-white p-4 border border-[#9B7FCB] rounded-b-md shadow-inner grid grid-cols-2 md:grid-cols-3 gap-3\",children:unitList.map(unit=>/*#__PURE__*/_jsxs(\"div\",{className:\"p-2 rounded-md cursor-pointer transition-colors \".concat(selectedUnits.includes(unit.code)?'bg-[#4A1D7A] text-white':'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'),onClick:()=>toggleUnit(unit.code),children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-bold\",children:unit.code}),/*#__PURE__*/_jsx(\"div\",{className:\"text-sm\",children:unit.name})]},unit.code))})]});const renderAdditionalResources=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"bg-[#ECFDF5] p-4 rounded-lg mt-6 border border-[#059669]\",children:[/*#__PURE__*/_jsx(\"h3\",{className:\"font-semibold text-[#111827]\",children:\"Additional Resources:\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-2\",children:[/*#__PURE__*/_jsxs(\"a\",{href:\"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"flex items-center text-[#0369A1] hover:underline mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"\\uD83D\\uDCC4\"}),\"IAL Mathematics Aggregation Rules and Guidance\"]}),/*#__PURE__*/_jsxs(\"a\",{href:\"https://qualifications.pearson.com/en/qualifications/edexcel-international-advanced-levels/mathematics.html\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"flex items-center text-[#0369A1] hover:underline mb-2\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"\\uD83D\\uDD17\"}),\"Edexcel IAL Mathematics Qualification Page\"]}),/*#__PURE__*/_jsxs(\"a\",{href:\"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\",target:\"_blank\",rel:\"noopener noreferrer\",className:\"flex items-center text-[#0369A1] hover:underline\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"mr-2\",children:\"\\uD83D\\uDD04\"}),\"Transfer of Credit Information\"]})]})]});const renderStartOverButton=()=>/*#__PURE__*/_jsxs(\"div\",{className:\"mt-8 mb-4\",children:[/*#__PURE__*/_jsxs(\"button\",{onClick:onStartOver,className:\"w-full bg-[#008F88] hover:bg-[#00B2A9] text-white font-medium py-3 px-4 rounded transition-colors duration-300 flex items-center justify-center\",children:[/*#__PURE__*/_jsx(\"svg\",{xmlns:\"http://www.w3.org/2000/svg\",className:\"h-5 w-5 mr-2\",viewBox:\"0 0 20 20\",fill:\"currentColor\",children:/*#__PURE__*/_jsx(\"path\",{fillRule:\"evenodd\",d:\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",clipRule:\"evenodd\"})}),\"Start Over\"]}),/*#__PURE__*/_jsxs(\"p\",{className:\"text-sm text-gray-700 text-center mt-2\",children:[\"Click \",/*#__PURE__*/_jsx(\"strong\",{children:\"Start Over\"}),\" to reset your unit selection and check different combinations.\"]})]});return/*#__PURE__*/_jsxs(\"div\",{className:\"bg-white p-6 rounded-lg shadow-md relative\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-bold text-[#4A1D7A] mb-4\",children:\"Mathematics Eligibility Calculator\"}),selectedUnits.length>0&&/*#__PURE__*/_jsx(SelectedUnitsPanel,{selectedUnits:selectedUnits}),renderInfoBanner(),renderModeSelector(),renderQualificationSelector(),renderSection(\"pure\",\"Pure Mathematics\",units.pure),renderSection(\"further\",\"Further Pure Mathematics\",units.further),renderSection(\"applied\",\"Applied Mathematics\",units.applied),/*#__PURE__*/_jsx(\"div\",{className:\"mt-6\",children:/*#__PURE__*/_jsx(\"button\",{className:\"w-full py-3 bg-[#00B2A9] hover:bg-[#008F88] text-white font-bold rounded-md shadow-lg transition-colors border-2 border-[#4A1D7A]\",onClick:checkIALEligibility,children:\"Check Eligibility\"})}),renderAdditionalResources(),renderStartOverButton()]});}export default Calculator;","map":{"version":3,"names":["React","useState","ReactGA","units","SelectedUnitsPanel","jsx","_jsx","jsxs","_jsxs","Calculator","_ref","selectedUnits","setSelectedUnits","result","setResult","expandStates","setExpandStates","onStartOver","qualificationMode","setQualificationMode","selectedQualification","setSelectedQualification","showQualOptions","setShowQualOptions","toggleExpand","section","event","category","action","label","_objectSpread","toggleUnit","unitCode","includes","filter","code","checkIALEligibility","JSON","stringify","mode","qualification","length","Error","checkStandardEligibility","checkDualEligibility","error","message","eligible","hasFP1","furtherPureUnits","unit","appliedUnits","totalAdditionalUnits","isEligibleForXFM01","unitsNeeded","concat","pureUnits","selectedPureUnits","hasPureComplete","every","hasP1P2","validPairs","hasValidPair","some","pair","isEligibleForIAS","alternativeMessage","missingUnits","join","neededForIAS","push","possiblePairs","forEach","havePair","missingFromPair","isEligibleForXMA01","isEligibleForYPM01","canGetYMA01","additionalUnitsNeeded","additionalUnitsAvailable","renderModeSelector","className","children","onClick","renderInfoBanner","href","target","rel","renderQualificationSelector","fill","viewBox","stroke","strokeLinecap","strokeWidth","d","renderSection","sectionKey","title","unitList","map","name","renderAdditionalResources","renderStartOverButton","xmlns","fillRule","clipRule","pure","further","applied"],"sources":["/Users/leebeckett/Cursor/IALFinal/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactGA from 'react-ga4';\nimport { units } from '../data/units';\nimport SelectedUnitsPanel from './SelectedUnitsPanel';\n\nfunction Calculator({ \n  selectedUnits, \n  setSelectedUnits, \n  result, \n  setResult, \n  expandStates, \n  setExpandStates,\n  onStartOver\n}) {\n  const [qualificationMode, setQualificationMode] = useState('standard'); // 'standard' or 'dual'\n  const [selectedQualification, setSelectedQualification] = useState('ial+ias');\n  const [showQualOptions, setShowQualOptions] = useState(false);\n  \n  const toggleExpand = (section) => {\n    // Track section expansion/collapse\n    ReactGA.event({\n      category: 'UI',\n      action: expandStates[section] ? 'Collapse Section' : 'Expand Section',\n      label: section\n    });\n    \n    setExpandStates({\n      ...expandStates,\n      [section]: !expandStates[section]\n    });\n  };\n\n  const toggleUnit = (unitCode) => {\n    // Track unit selection/deselection\n    ReactGA.event({\n      category: 'Unit',\n      action: selectedUnits.includes(unitCode) ? 'Deselect Unit' : 'Select Unit',\n      label: unitCode\n    });\n    \n    if (selectedUnits.includes(unitCode)) {\n      setSelectedUnits(selectedUnits.filter(code => code !== unitCode));\n    } else {\n      setSelectedUnits([...selectedUnits, unitCode]);\n    }\n  };\n\n  const checkIALEligibility = () => {\n    try {\n      // Track the eligibility check event\n      ReactGA.event({\n        category: 'Calculator',\n        action: 'Check Eligibility',\n        label: JSON.stringify({\n          units: selectedUnits,\n          mode: qualificationMode,\n          qualification: selectedQualification\n        })\n      });\n\n      if (selectedUnits.length === 0) {\n        throw new Error(\"Please select at least one unit\");\n      }\n\n      if (qualificationMode === 'standard') {\n        checkStandardEligibility();\n      } else {\n        checkDualEligibility();\n      }\n    } catch (error) {\n      // Track errors in eligibility check\n      ReactGA.event({\n        category: 'Error',\n        action: 'Eligibility Check Error',\n        label: error.message\n      });\n      \n      setResult({\n        eligible: false,\n        message: error.message\n      });\n    }\n  };\n\n  const checkStandardEligibility = () => {\n    // Check Further Pure requirements first\n    const hasFP1 = selectedUnits.includes(\"FP1\");\n    \n    // Count further pure units (FP1, FP2, FP3)\n    const furtherPureUnits = [\"FP1\", \"FP2\", \"FP3\"].filter(unit => \n      selectedUnits.includes(unit)\n    );\n    \n    // Count all applied units\n    const appliedUnits = [\"S1\", \"S2\", \"S3\", \"M1\", \"M2\", \"M3\", \"D1\"].filter(unit => \n      selectedUnits.includes(unit)\n    );\n\n    // For XFM01 (IAS Further Mathematics)\n    // Must have FP1 plus two additional units (can be further pure or applied)\n    const totalAdditionalUnits = (furtherPureUnits.length - 1) + appliedUnits.length; // -1 because we don't count FP1 twice\n    const isEligibleForXFM01 = hasFP1 && totalAdditionalUnits >= 2;\n\n    // Check XFM01 eligibility first\n    if (isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Further Mathematics qualification (XFM01)!\",\n        qualification: \"IAS Further Mathematics (XFM01)\"\n      });\n      return;\n    }\n\n    // If they have FP1 but not enough units, give specific guidance\n    if (hasFP1) {\n      const unitsNeeded = 2 - totalAdditionalUnits;\n      setResult({\n        eligible: false,\n        message: `You have FP1 but need ${unitsNeeded} more unit${unitsNeeded > 1 ? 's' : ''} (either Further Pure or Applied) to be eligible for IAS Further Mathematics (XFM01).`\n      });\n      return;\n    }\n\n    // Only check Pure Mathematics requirements if not eligible for Further Mathematics\n    const pureUnits = [\"P1\", \"P2\", \"P3\", \"P4\"];\n    const selectedPureUnits = pureUnits.filter(unit => selectedUnits.includes(unit));\n    const hasPureComplete = pureUnits.every(unit => selectedUnits.includes(unit));\n    \n    // Check for AS Level eligibility (P1, P2 and one applied)\n    const hasP1P2 = [\"P1\", \"P2\"].every(unit => selectedUnits.includes(unit));\n\n    // Check for valid applied pairs for IAL\n    const validPairs = [\n      [\"S1\", \"S2\"], [\"M1\", \"M2\"], [\"S1\", \"M1\"], \n      [\"S1\", \"D1\"], [\"M1\", \"D1\"]\n    ];\n    const hasValidPair = validPairs.some(pair => \n      pair.every(unit => selectedUnits.includes(unit))\n    );\n\n    // Check if user is eligible for IAS Mathematics\n    const isEligibleForIAS = hasP1P2 && appliedUnits.length >= 1;\n\n    if (!hasPureComplete && isEligibleForIAS) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Mathematics qualification (XMA01), but not for the full IAL Mathematics (YMA01).\",\n        qualification: \"IAS Mathematics (XMA01)\",\n        alternativeMessage: \"To be eligible for IAL Mathematics (YMA01), you need to complete all Pure units (P1-P4) and have a valid applied pair.\"\n      });\n      return;\n    }\n\n    if (!hasPureComplete) {\n      let message = \"Missing one or more required Pure Mathematics units (P1-P4)\";\n      \n      // If they have some pure units, be more specific\n      if (selectedPureUnits.length > 0) {\n        const missingUnits = pureUnits.filter(unit => !selectedUnits.includes(unit));\n        message = `Missing ${missingUnits.join(\", \")} from the required Pure Mathematics units`;\n      }\n      \n      // Add recommendations if they're close to IAS\n      if (selectedPureUnits.length >= 1) {\n        const neededForIAS = [];\n        if (!selectedUnits.includes(\"P1\")) neededForIAS.push(\"P1\");\n        if (!selectedUnits.includes(\"P2\")) neededForIAS.push(\"P2\");\n        if (appliedUnits.length === 0) neededForIAS.push(\"one applied unit\");\n        \n        message += `. You could aim for IAS Mathematics (XMA01) by adding ${neededForIAS.join(\" and \")}.`;\n      }\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    if (!hasValidPair) {\n      // Construct helpful message about what pairs they could add\n      let message = \"Missing a valid applied pair. You need one of: \";\n      const possiblePairs = [];\n      \n      validPairs.forEach(pair => {\n        const havePair = pair.filter(unit => selectedUnits.includes(unit));\n        const missingFromPair = pair.filter(unit => !selectedUnits.includes(unit));\n        \n        if (havePair.length === 1) {\n          possiblePairs.push(`${havePair[0]}+${missingFromPair[0]}`);\n        } else if (havePair.length === 0) {\n          possiblePairs.push(`${pair[0]}+${pair[1]}`);\n        }\n      });\n      \n      message += possiblePairs.join(\", \");\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    setResult({\n      eligible: true,\n      message: \"You are eligible for the IAL Mathematics qualification (YMA01)!\"\n    });\n  };\n\n  const checkDualEligibility = () => {\n    // Check Further Pure requirements first\n    const hasFP1 = selectedUnits.includes(\"FP1\");\n    \n    // Count further pure units (FP1, FP2, FP3)\n    const furtherPureUnits = [\"FP1\", \"FP2\", \"FP3\"].filter(unit => \n      selectedUnits.includes(unit)\n    );\n    \n    // Count all applied units\n    const appliedUnits = [\"S1\", \"S2\", \"S3\", \"M1\", \"M2\", \"M3\", \"D1\"].filter(unit => \n      selectedUnits.includes(unit)\n    );\n\n    // For XFM01 (IAS Further Mathematics)\n    // Must have FP1 plus two additional units (can be further pure or applied)\n    const totalAdditionalUnits = (furtherPureUnits.length - 1) + appliedUnits.length; // -1 because we don't count FP1 twice\n    const isEligibleForXFM01 = hasFP1 && totalAdditionalUnits >= 2;\n\n    // Check XFM01 eligibility first\n    if (isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Further Mathematics qualification (XFM01)!\",\n        qualification: \"IAS Further Mathematics (XFM01)\"\n      });\n      return;\n    }\n\n    // If they have FP1 but not enough units, give specific guidance\n    if (hasFP1) {\n      const unitsNeeded = 2 - totalAdditionalUnits;\n      setResult({\n        eligible: false,\n        message: `You have FP1 but need ${unitsNeeded} more unit${unitsNeeded > 1 ? 's' : ''} (either Further Pure or Applied) to be eligible for IAS Further Mathematics (XFM01).`\n      });\n      return;\n    }\n\n    // Only check Pure Mathematics requirements if not eligible for Further Mathematics\n    const pureUnits = [\"P1\", \"P2\", \"P3\", \"P4\"];\n    const hasPureComplete = pureUnits.every(unit => selectedUnits.includes(unit));\n    const hasP1P2 = [\"P1\", \"P2\"].every(unit => selectedUnits.includes(unit));\n    \n    // Check for valid applied pairs for IAL\n    const validPairs = [\n      [\"S1\", \"S2\"], [\"M1\", \"M2\"], [\"S1\", \"M1\"], \n      [\"S1\", \"D1\"], [\"M1\", \"D1\"]\n    ];\n    const hasValidPair = validPairs.some(pair => \n      pair.every(unit => selectedUnits.includes(unit))\n    );\n    \n    // Check if eligible for IAS Mathematics (XMA01)\n    const isEligibleForXMA01 = hasP1P2 && appliedUnits.length >= 1;\n    \n    // Check if eligible for Pure Mathematics (YPM01)\n    const isEligibleForYPM01 = hasPureComplete;\n    \n    // Check if student can get YMA01 (P1-P4 + valid applied pair)\n    const canGetYMA01 = hasPureComplete && hasValidPair;\n\n    // Check YMA01 and YPM01 conflict\n    if (isEligibleForYPM01 && canGetYMA01) {\n      setResult({\n        eligible: false,\n        message: \"Unfortunately, you are not eligible to proceed at this time. While you have sufficient units for both the YMA01 and YPM01 qualifications, these two qualifications cannot be cashed in during the same exam series.\"\n      });\n      return;\n    }\n\n    // Check Pure Mathematics requirements if not eligible for Further Mathematics\n    if (!hasPureComplete) {\n      let message = \"Missing one or more required Pure Mathematics units (P1-P4)\";\n      \n      // Add recommendations for Further Mathematics if they're close\n      if (hasFP1) {\n        message += \". However, you could aim for IAS Further Mathematics (XFM01) by adding \" + \n                  (totalAdditionalUnits === 0 ? \"two more units\" : \n                   totalAdditionalUnits === 1 ? \"one more unit\" : \"\");\n      }\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    // Check if eligible for IAS Mathematics alone\n    const isEligibleForIAS = hasP1P2 && appliedUnits.length >= 1;\n\n    if (!hasPureComplete && !hasFP1) {\n      // Neither IAL Math nor IAS Further Math requirements met\n      let message = \"Missing required Pure Mathematics units (P1-P4) for IAL Mathematics and FP1 for IAS Further Mathematics\";\n      \n      if (isEligibleForIAS) {\n        message = \"You are eligible for IAS Mathematics (XMA01) only. To qualify for dual qualifications, you need all Pure units (P1-P4) and FP1 plus additional units.\";\n      }\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    if (!hasFP1) {\n      setResult({\n        eligible: false,\n        message: \"FP1 is required for IAS Further Mathematics. You qualify for IAL Mathematics (YMA01) but not for the Further Mathematics component.\"\n      });\n      return;\n    }\n\n    // Need at least 2 more units beyond FP1\n    const additionalUnitsNeeded = 2;\n    const additionalUnitsAvailable = totalAdditionalUnits;\n\n    if (additionalUnitsAvailable < additionalUnitsNeeded) {\n      setResult({\n        eligible: false,\n        message: `You need ${additionalUnitsNeeded} additional units beyond FP1 for IAS Further Mathematics. You currently have ${additionalUnitsAvailable}. You qualify for IAL Mathematics (YMA01) but need more units for Further Mathematics.`\n      });\n      return;\n    }\n\n    setResult({\n      eligible: true,\n      message: \"You are eligible for both IAL Mathematics (YMA01) and IAS Further Mathematics (YFM01) qualifications!\"\n    });\n  };\n\n  const renderModeSelector = () => (\n    <div className=\"mb-6\">\n      <h3 className=\"text-lg font-semibold text-[#4A1D7A] mb-3\">Qualification Mode</h3>\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        <button\n          className={`px-4 py-2 rounded-md ${\n            qualificationMode === 'standard'\n              ? 'bg-[#4A1D7A] text-white'\n              : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'\n          }`}\n          onClick={() => setQualificationMode('standard')}\n        >\n          Standard Mathematics Eligibility\n        </button>\n        <button\n          className={`px-4 py-2 rounded-md ${\n            qualificationMode === 'dual'\n              ? 'bg-[#4A1D7A] text-white'\n              : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'\n          }`}\n          onClick={() => setQualificationMode('dual')}\n        >\n          Dual Qualification Mode\n        </button>\n      </div>\n      \n      {qualificationMode === 'standard' ? (\n        <div className=\"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\">\n          <p className=\"text-sm text-[#111827]\">\n            <strong>Standard Mode:</strong> Check eligibility for Mathematics (YMA01), Further Mathematics (YFM01), or IAS Further Mathematics qualifications. This mode now includes support for qualification combinations and transfer of credit options.\n          </p>\n        </div>\n      ) : (\n        <div className=\"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\">\n          <p className=\"text-sm text-[#111827]\">\n            <strong>Dual Qualification Mode:</strong> Check if you are eligible to obtain both Mathematics (YMA01) and Further Mathematics (YFM01) qualifications with the selected units. This mode helps properly allocate units between the two qualifications.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderInfoBanner = () => (\n    <div className=\"bg-[#ECFDF5] p-4 rounded-lg mb-6 border border-[#059669]\">\n      <h3 className=\"font-semibold text-[#111827]\">Important Information About Unit Aggregation</h3>\n      <p className=\"text-sm mt-1 text-[#111827]\">\n        When combining different qualifications (e.g., IAL Mathematics with IAS Further Mathematics), you must ensure proper unit aggregation. Units previously cashed in may need to be uncashed before being used in a new qualification.\n      </p>\n      <p className=\"text-sm mt-2 text-[#111827]\">\n        Please also make sure the candidate's UCI number and personal details are the same across all series to ensure proper unit aggregation.\n      </p>\n      <a \n        href=\"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        className=\"text-[#0369A1] hover:underline text-sm font-medium mt-2 inline-block\"\n      >\n        View detailed aggregation guidance\n      </a>\n    </div>\n  );\n\n  const renderQualificationSelector = () => (\n    <div className=\"mb-6\">\n      <button\n        onClick={() => setShowQualOptions(!showQualOptions)}\n        className=\"w-full flex items-center justify-between bg-[#9B7FCB] hover:bg-[#4A1D7A] text-white p-3 rounded-md cursor-pointer transition-colors\"\n      >\n        <h3 className=\"font-medium\">Additional Qualification Options</h3>\n        <svg \n          className={`w-5 h-5 transition-transform ${showQualOptions ? 'transform rotate-180' : ''}`}\n          fill=\"none\" \n          viewBox=\"0 0 24 24\" \n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      \n      {showQualOptions && (\n        <div className=\"mt-3 border border-[#9B7FCB] rounded-md p-4 bg-white\">\n          <p className=\"mb-3 text-sm\">Select the combination of qualifications you are aiming for:</p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            <div \n              className={`p-4 rounded-md cursor-pointer border ${\n                selectedQualification === 'ial+ias' \n                  ? 'bg-[#ECFDF5] border-[#059669]' \n                  : 'bg-white border-gray-300 hover:bg-[#F3F4F6]'\n              }`}\n              onClick={() => setSelectedQualification('ial+ias')}\n            >\n              <h4 className=\"font-semibold\">IAL Mathematics + IAS Further Mathematics</h4>\n              <p className=\"text-sm text-gray-700\">Full A Level Mathematics with AS Level Further Mathematics</p>\n            </div>\n            \n            <div \n              className={`p-4 rounded-md cursor-pointer border ${\n                selectedQualification === 'transfer' \n                  ? 'bg-[#ECFDF5] border-[#059669]' \n                  : 'bg-white border-gray-300 hover:bg-[#F3F4F6]'\n              }`}\n              onClick={() => setSelectedQualification('transfer')}\n            >\n              <h4 className=\"font-semibold\">Transfer of Credit</h4>\n              <p className=\"text-sm text-gray-700\">Using qualifications from other exam boards</p>\n            </div>\n          </div>\n          \n          {selectedQualification === 'ial+ias' && (\n            <div className=\"bg-[#FEF9C3] p-4 rounded-lg mt-4 border-l-4 border-[#CA8A04]\">\n              <h4 className=\"font-semibold text-[#111827]\">Important Reminder for IAL + IAS Combinations</h4>\n              <p className=\"text-sm mt-1 text-[#111827]\">\n                If you have previously cashed in IAS Mathematics or Further Mathematics, you must uncash these qualifications\n                when cashing in the IAL options to allow reaggregation of units.\n              </p>\n              <p className=\"text-sm mt-2 text-[#111827]\">\n                Your examination officer can help with the uncashing process, which must be completed before the IAL qualification\n                can be awarded.\n              </p>\n            </div>\n          )}\n          \n          {selectedQualification === 'transfer' && (\n            <div className=\"bg-[#E6F7FF] p-4 rounded-lg mt-4 border border-[#0369A1]\">\n              <h4 className=\"font-semibold text-[#111827]\">Transfer of Credit Information</h4>\n              <p className=\"text-sm mt-1 text-[#111827]\">\n                If you are cashing in Edexcel IAL Mathematics with units from another exam board, you'll need to follow the Transfer\n                of Credit process.\n              </p>\n              <a \n                href=\"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\" \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-sm mt-2 text-[#0369A1] hover:underline inline-block\"\n              >\n                Visit the Transfer of Credit page →\n              </a>\n              \n              <h4 className=\"font-semibold mt-4 text-[#111827]\">Transfer of Credit Key Points:</h4>\n              <ul className=\"list-disc pl-5 text-sm mt-1 text-[#111827]\">\n                <li>You must apply for Transfer of Credit before the qualification can be awarded</li>\n                <li>Applications must be made via your examination officer</li>\n                <li>Evidence of the previously achieved qualification must be provided</li>\n                <li>Check deadline dates carefully - applications must be received before results day</li>\n              </ul>\n            </div>\n          )}\n          \n          {selectedQualification === 'ial+ias' && (\n            <div className=\"mt-4\">\n              <h4 className=\"font-semibold text-[#111827]\">IAL Mathematics + IAS Further Mathematics Requirements:</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-2\">\n                <div>\n                  <h5 className=\"font-medium text-[#111827]\">For IAL Mathematics:</h5>\n                  <ul className=\"list-disc pl-5 text-sm text-[#111827]\">\n                    <li>P1, P2, P3, and P4</li>\n                    <li>One valid pair from the applied units</li>\n                  </ul>\n                </div>\n                <div>\n                  <h5 className=\"font-medium text-[#111827]\">For IAS Further Mathematics:</h5>\n                  <ul className=\"list-disc pl-5 text-sm text-[#111827]\">\n                    <li>FP1 is required</li>\n                    <li>Two more units (cannot include P1-P4)</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  const renderSection = (sectionKey, title, unitList) => (\n    <div className=\"mb-6\">\n      <div \n        className=\"flex items-center justify-between bg-[#4A1D7A] p-3 rounded-t-md cursor-pointer\"\n        onClick={() => toggleExpand(sectionKey)}\n      >\n        <h3 className=\"text-white font-medium\">{title}</h3>\n        <svg \n          className={`w-5 h-5 text-white transition-transform ${expandStates[sectionKey] ? 'transform rotate-180' : ''}`}\n          fill=\"none\" \n          viewBox=\"0 0 24 24\" \n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </div>\n\n      {expandStates[sectionKey] && (\n        <div className=\"bg-white p-4 border border-[#9B7FCB] rounded-b-md shadow-inner grid grid-cols-2 md:grid-cols-3 gap-3\">\n          {unitList.map(unit => (\n            <div \n              key={unit.code}\n              className={`p-2 rounded-md cursor-pointer transition-colors ${\n                selectedUnits.includes(unit.code)\n                  ? 'bg-[#4A1D7A] text-white' \n                  : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'\n              }`}\n              onClick={() => toggleUnit(unit.code)}\n            >\n              <div className=\"font-bold\">{unit.code}</div>\n              <div className=\"text-sm\">{unit.name}</div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n  const renderAdditionalResources = () => (\n    <div className=\"bg-[#ECFDF5] p-4 rounded-lg mt-6 border border-[#059669]\">\n      <h3 className=\"font-semibold text-[#111827]\">Additional Resources:</h3>\n      <div className=\"mt-2\">\n        <a \n          href=\"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"flex items-center text-[#0369A1] hover:underline mb-2\"\n        >\n          <span className=\"mr-2\">📄</span>\n          IAL Mathematics Aggregation Rules and Guidance\n        </a>\n        <a \n          href=\"https://qualifications.pearson.com/en/qualifications/edexcel-international-advanced-levels/mathematics.html\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"flex items-center text-[#0369A1] hover:underline mb-2\"\n        >\n          <span className=\"mr-2\">🔗</span>\n          Edexcel IAL Mathematics Qualification Page\n        </a>\n        <a \n          href=\"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"flex items-center text-[#0369A1] hover:underline\"\n        >\n          <span className=\"mr-2\">🔄</span>\n          Transfer of Credit Information\n        </a>\n      </div>\n    </div>\n  );\n  \n  const renderStartOverButton = () => (\n    <div className=\"mt-8 mb-4\">\n      <button \n        onClick={onStartOver}\n        className=\"w-full bg-[#008F88] hover:bg-[#00B2A9] text-white font-medium py-3 px-4 rounded transition-colors duration-300 flex items-center justify-center\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n        </svg>\n        Start Over\n      </button>\n      <p className=\"text-sm text-gray-700 text-center mt-2\">\n        Click <strong>Start Over</strong> to reset your unit selection and check different combinations.\n      </p>\n    </div>\n  );\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md relative\">\n      <h2 className=\"text-xl font-bold text-[#4A1D7A] mb-4\">Mathematics Eligibility Calculator</h2>\n      \n      {/* Floating Selected Units Panel */}\n      {selectedUnits.length > 0 && (\n        <SelectedUnitsPanel selectedUnits={selectedUnits} />\n      )}\n      \n      {renderInfoBanner()}\n      {renderModeSelector()}\n      {renderQualificationSelector()}\n      \n      {renderSection(\"pure\", \"Pure Mathematics\", units.pure)}\n      {renderSection(\"further\", \"Further Pure Mathematics\", units.further)}\n      {renderSection(\"applied\", \"Applied Mathematics\", units.applied)}\n\n      <div className=\"mt-6\">\n        <button \n          className=\"w-full py-3 bg-[#00B2A9] hover:bg-[#008F88] text-white font-bold rounded-md shadow-lg transition-colors border-2 border-[#4A1D7A]\"\n          onClick={checkIALEligibility}\n        >\n          Check Eligibility\n        </button>\n      </div>\n\n      {renderAdditionalResources()}\n      {renderStartOverButton()}\n    </div>\n  );\n}\n\nexport default Calculator; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}