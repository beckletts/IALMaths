{"ast":null,"code":"var _jsxFileName = \"/Users/leebeckett/Cursor/IALFinal/src/components/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ReactGA from 'react-ga4';\nimport { units } from '../data/units';\nimport SelectedUnitsPanel from './SelectedUnitsPanel';\n\n// Calculator component: Main React component for the IAL Maths Eligibility Calculator UI and logic.\n// Props:\n// - selectedUnits: array of currently selected unit codes\n// - setSelectedUnits: function to update selected units\n// - result: eligibility result object\n// - setResult: function to update eligibility result\n// - expandStates: object tracking which unit panels are expanded\n// - setExpandStates: function to update expandStates\n// - onStartOver: function to reset the calculator\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calculator({\n  selectedUnits,\n  setSelectedUnits,\n  result,\n  setResult,\n  expandStates,\n  setExpandStates,\n  onStartOver\n}) {\n  _s();\n  // --- State Hooks ---\n  // qualificationMode: 'standard' for single qualification, 'dual' for dual mode\n  const [qualificationMode, setQualificationMode] = useState('standard'); // 'standard' or 'dual'\n  // selectedQualification: tracks which additional qualification option is selected\n  const [selectedQualification, setSelectedQualification] = useState('ial+ias');\n  // showQualOptions: controls visibility of the additional qualification options panel\n  const [showQualOptions, setShowQualOptions] = useState(false);\n\n  // toggleExpand: Expands or collapses a unit section (Pure, Further, Applied) and tracks the event in Google Analytics.\n  const toggleExpand = section => {\n    // Track section expansion/collapse\n    ReactGA.event({\n      category: 'UI',\n      action: expandStates[section] ? 'Collapse Section' : 'Expand Section',\n      label: section\n    });\n    setExpandStates({\n      ...expandStates,\n      [section]: !expandStates[section]\n    });\n  };\n\n  // toggleUnit: Adds or removes a unit from the selectedUnits array and tracks the event in Google Analytics.\n  const toggleUnit = unitCode => {\n    // Track unit selection/deselection\n    ReactGA.event({\n      category: 'Unit',\n      action: selectedUnits.includes(unitCode) ? 'Deselect Unit' : 'Select Unit',\n      label: unitCode\n    });\n    if (selectedUnits.includes(unitCode)) {\n      setSelectedUnits(selectedUnits.filter(code => code !== unitCode));\n    } else {\n      setSelectedUnits([...selectedUnits, unitCode]);\n    }\n  };\n\n  // checkIALEligibility: Main entry point for eligibility checking. Tracks the event, validates input, and delegates to standard or dual mode logic.\n  const checkIALEligibility = () => {\n    try {\n      // Track the eligibility check event\n      ReactGA.event({\n        category: 'Calculator',\n        action: 'Check Eligibility',\n        label: JSON.stringify({\n          units: selectedUnits,\n          mode: qualificationMode,\n          qualification: selectedQualification\n        })\n      });\n      if (selectedUnits.length === 0) {\n        throw new Error(\"Please select at least one unit\");\n      }\n      if (qualificationMode === 'standard') {\n        checkStandardEligibility();\n      } else {\n        checkDualEligibility();\n      }\n    } catch (error) {\n      // Track errors in eligibility check\n      ReactGA.event({\n        category: 'Error',\n        action: 'Eligibility Check Error',\n        label: error.message\n      });\n      setResult({\n        eligible: false,\n        message: error.message\n      });\n    }\n  };\n\n  // checkStandardEligibility: Handles eligibility logic for standard (single qualification) mode.\n  // Contains logic for all single-qualification awards and provides detailed feedback for missing requirements.\n  const checkStandardEligibility = () => {\n    // Define constant arrays at the top\n    const pureUnits = [\"P1\", \"P2\", \"P3\", \"P4\"];\n    const furtherPureUnits = [\"FP1\", \"FP2\", \"FP3\"];\n    const appliedUnits = [\"S1\", \"S2\", \"S3\", \"M1\", \"M2\", \"M3\", \"D1\"].filter(unit => selectedUnits.includes(unit));\n\n    // Check Further Pure requirements first\n    const hasFP1 = selectedUnits.includes(\"FP1\");\n\n    // Count further pure units (FP1, FP2, FP3)\n    const selectedFurtherPureUnits = furtherPureUnits.filter(unit => selectedUnits.includes(unit));\n\n    // Check for P1 and P2\n    const hasP1P2 = [\"P1\", \"P2\"].every(unit => selectedUnits.includes(unit));\n\n    // Check for all P units\n    const hasPureComplete = pureUnits.every(unit => selectedUnits.includes(unit));\n\n    // For YFM01 (IAL Further Mathematics)\n    // Must have either:\n    // 1. All three FP units plus three applied units, OR\n    // 2. Two FP units plus four applied units\n    const hasTwoFP = selectedFurtherPureUnits.length >= 2;\n    const hasAllFP = selectedFurtherPureUnits.length === 3;\n    const totalAppliedUnits = appliedUnits.length;\n    const isEligibleForYFM01 = hasAllFP && totalAppliedUnits >= 3 || hasTwoFP && totalAppliedUnits >= 4;\n\n    // Check YFM01 eligibility first\n    if (isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Further Mathematics qualification (YFM01)!\",\n        qualification: \"IAL Further Mathematics (YFM01)\"\n      });\n      return;\n    }\n\n    // Check for YPM01 eligibility (P1-P4, FP1, and FP2 or FP3)\n    const hasFP2 = selectedUnits.includes(\"FP2\");\n    const hasFP3 = selectedUnits.includes(\"FP3\");\n    const hasYPM01 = hasPureComplete && selectedUnits.includes(\"FP1\") && (hasFP2 || hasFP3);\n    // Check for XPM01 eligibility (P1-P4 and FP1 only)\n    const hasXPM01 = hasPureComplete && selectedUnits.includes(\"FP1\") && !hasFP2 && !hasFP3;\n\n    // Check YPM01 eligibility first\n    if (hasYPM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Pure Mathematics qualification (YPM01)!\",\n        qualification: \"IAL Pure Mathematics (YPM01)\"\n      });\n      return;\n    }\n\n    // Check XPM01 eligibility\n    if (hasXPM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Pure Mathematics qualification (XPM01)!\",\n        qualification: \"IAS Pure Mathematics (XPM01)\"\n      });\n      return;\n    }\n\n    // For XFM01 (IAS Further Mathematics)\n    // Must have FP1 plus two additional units (can be further pure or applied)\n    const totalUnitsForXFM01 = selectedFurtherPureUnits.length - 1 + appliedUnits.length; // -1 because we don't count FP1 twice\n    const isEligibleForXFM01 = hasFP1 && totalUnitsForXFM01 >= 2;\n\n    // Check XFM01 eligibility\n    if (isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Further Mathematics qualification (XFM01)!\",\n        qualification: \"IAS Further Mathematics (XFM01)\"\n      });\n      return;\n    }\n\n    // Check for valid applied pairs for IAL\n    const validPairs = [[\"S1\", \"S2\"], [\"M1\", \"M2\"], [\"S1\", \"M1\"], [\"S1\", \"D1\"], [\"M1\", \"D1\"]];\n    const hasValidPair = validPairs.some(pair => pair.every(unit => selectedUnits.includes(unit)));\n\n    // Check if user is eligible for IAS Mathematics\n    const isEligibleForIAS = hasP1P2 && appliedUnits.length >= 1;\n    if (!hasPureComplete && isEligibleForIAS) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Mathematics qualification (XMA01), but not for the full IAL Mathematics (YMA01).\",\n        qualification: \"IAS Mathematics (XMA01)\",\n        alternativeMessage: \"To be eligible for IAL Mathematics (YMA01), you need to complete all Pure units (P1-P4) and have a valid applied pair.\"\n      });\n      return;\n    }\n    if (!hasPureComplete) {\n      let message = \"Missing one or more required Pure Mathematics units (P1-P4)\";\n\n      // If they have some pure units, be more specific\n      if (pureUnits.filter(unit => selectedUnits.includes(unit)).length > 0) {\n        const missingUnits = pureUnits.filter(unit => !selectedUnits.includes(unit));\n        message = `Missing ${missingUnits.join(\", \")} from the required Pure Mathematics units`;\n      }\n\n      // Add recommendations if they're close to IAS\n      if (pureUnits.filter(unit => selectedUnits.includes(unit)).length >= 1) {\n        const neededForIAS = [];\n        if (!selectedUnits.includes(\"P1\")) neededForIAS.push(\"P1\");\n        if (!selectedUnits.includes(\"P2\")) neededForIAS.push(\"P2\");\n        if (appliedUnits.length === 0) neededForIAS.push(\"one applied unit\");\n        message += `. You could aim for IAS Mathematics (XMA01) by adding ${neededForIAS.join(\" and \")}.`;\n      }\n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n    if (!hasValidPair) {\n      // Construct helpful message about what pairs they could add\n      let message = \"Missing a valid applied pair. You need one of: \";\n      const possiblePairs = [];\n      validPairs.forEach(pair => {\n        const havePair = pair.filter(unit => selectedUnits.includes(unit));\n        const missingFromPair = pair.filter(unit => !selectedUnits.includes(unit));\n        if (havePair.length === 1) {\n          possiblePairs.push(`${havePair[0]}+${missingFromPair[0]}`);\n        } else if (havePair.length === 0) {\n          possiblePairs.push(`${pair[0]}+${pair[1]}`);\n        }\n      });\n      message += possiblePairs.join(\", \");\n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n    setResult({\n      eligible: true,\n      message: \"You are eligible for the IAL Mathematics qualification (YMA01)!\"\n    });\n  };\n\n  // checkDualEligibility: Handles eligibility logic for dual mode (multiple awards).\n  // Contains custom checks for specific dual combinations, then falls back to rule-based logic for all other cases.\n  const checkDualEligibility = () => {\n    // --- Custom XMA01 & XFM01 message for specific 6-unit combinations ---\n    if (selectedUnits.length === 6) {\n      const xma01_xfm01_combinations = [[\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"FP3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"M2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"M3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"S1\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"S2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"S3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"D1\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"M2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"M3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"S1\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"S2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"S3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"D1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"FP3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"M1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"M2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"M3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"S2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"S3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"D1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"M1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"M2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"M3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"S2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"S3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"D1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"FP3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"M1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"M2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"M3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"S1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"S2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"S3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"M1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"M2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"M3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"S1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"S2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"S3\"]];\n      const sortedSelected = [...selectedUnits].sort();\n      for (const combo of xma01_xfm01_combinations) {\n        if (combo.slice().sort().every((unit, idx) => unit === sortedSelected[idx])) {\n          setResult({\n            eligible: true,\n            message: \"You are eligible for the XMA01 & XFM01!\"\n          });\n          return;\n        }\n      }\n    }\n\n    // --- Custom YMA01 & YFM01 message for specific 12-unit combinations ---\n    if (selectedUnits.length === 12) {\n      const yma01_yfm01_combinations = [[\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"S1\", \"FP1\", \"FP2\", \"FP3\", \"S2\", \"S3\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"S1\", \"FP1\", \"FP2\", \"FP3\", \"D1\", \"M2\", \"M3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"M2\", \"M3\", \"S1\", \"S2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"M2\", \"M3\", \"S1\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"M3\", \"S1\", \"S2\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP3\", \"M2\", \"M3\", \"S1\", \"S2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP3\", \"M2\", \"M3\", \"S1\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP3\", \"M3\", \"S1\", \"S2\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"M2\", \"M3\", \"S1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"M3\", \"S1\", \"S2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"S1\", \"S2\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"M3\", \"S1\", \"S2\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"M3\", \"S1\", \"S2\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"S1\", \"S2\", \"S3\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP3\", \"M3\", \"S1\", \"S2\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP3\", \"M3\", \"S1\", \"S2\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP3\", \"S1\", \"S2\", \"S3\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"FP3\", \"M3\", \"S1\", \"S2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"FP3\", \"S1\", \"S2\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"FP3\", \"S2\", \"S3\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"S2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"S2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"M1\", \"M2\", \"M3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"S3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"D1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"M1\", \"M2\", \"M3\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"S3\", \"D1\", \"M1\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"D1\", \"M1\", \"M2\"], [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"D1\", \"M2\", \"M3\"]];\n      const sortedSelected = [...selectedUnits].sort();\n      for (const combo of yma01_yfm01_combinations) {\n        if (combo.slice().sort().every((unit, idx) => unit === sortedSelected[idx])) {\n          setResult({\n            eligible: true,\n            message: \"You are eligible for the YMA01 & YFM01!\"\n          });\n          return;\n        }\n      }\n    }\n\n    // Define constant arrays at the top\n    const pureUnits = [\"P1\", \"P2\", \"P3\", \"P4\"];\n    const furtherPureUnits = [\"FP1\", \"FP2\", \"FP3\"];\n    const allAppliedUnits = [\"S1\", \"S2\", \"S3\", \"M1\", \"M2\", \"M3\", \"D1\"];\n\n    // Check Further Pure requirements first\n    const hasFP1 = selectedUnits.includes(\"FP1\");\n\n    // Count further pure units (FP1, FP2, FP3)\n    const selectedFurtherPureUnits = furtherPureUnits.filter(unit => selectedUnits.includes(unit));\n\n    // Count all applied units\n    const appliedUnits = allAppliedUnits.filter(unit => selectedUnits.includes(unit));\n\n    // Check for P1 and P2\n    const hasP1P2 = [\"P1\", \"P2\"].every(unit => selectedUnits.includes(unit));\n\n    // Check for all P units\n    const hasPureComplete = pureUnits.every(unit => selectedUnits.includes(unit));\n\n    // For YFM01 (IAL Further Mathematics)\n    // Must have either:\n    // 1. All three FP units plus three applied units, OR\n    // 2. Two FP units plus four applied units\n    const hasTwoFP = selectedFurtherPureUnits.length >= 2;\n    const hasAllFP = selectedFurtherPureUnits.length === 3;\n    const totalAppliedUnits = appliedUnits.length;\n    const isEligibleForYFM01 = hasAllFP && totalAppliedUnits >= 3 || hasTwoFP && totalAppliedUnits >= 4;\n\n    // For XFM01 (IAS Further Mathematics)\n    // Must have FP1 plus two additional units (can be further pure or applied)\n    const totalUnitsForXFM01 = selectedFurtherPureUnits.length + appliedUnits.length - 1; // -1 because we don't count FP1 twice\n    const isEligibleForXFM01 = hasFP1 && totalUnitsForXFM01 >= 2;\n\n    // Check for valid applied pairs for IAL\n    const validPairs = [[\"S1\", \"S2\"], [\"M1\", \"M2\"], [\"S1\", \"M1\"], [\"S1\", \"D1\"], [\"M1\", \"D1\"]];\n    const hasValidPair = validPairs.some(pair => pair.every(unit => selectedUnits.includes(unit)));\n\n    // Check if eligible for IAS Mathematics (XMA01)\n    const isEligibleForXMA01 = hasP1P2 && appliedUnits.length >= 1;\n\n    // Check if eligible for Pure Mathematics (YPM01)\n    // Must have P1, P2, P3, P4, FP1, and (FP2 or FP3)\n    const hasFP2 = selectedUnits.includes(\"FP2\");\n    const hasFP3 = selectedUnits.includes(\"FP3\");\n    const isEligibleForYPM01 = hasPureComplete && selectedUnits.includes(\"FP1\") && (hasFP2 || hasFP3);\n\n    // Check if student can get YMA01 (P1-P4 + valid applied pair)\n    const canGetYMA01 = hasPureComplete && hasValidPair;\n\n    // Check if eligible for both XFM01 and YFM01\n    if (isEligibleForXFM01 && isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAS Further Mathematics (XFM01) and IAL Further Mathematics (YFM01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check if eligible for both YMA01 and XMA01\n    if (hasPureComplete && appliedUnits.length >= 1) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAL Mathematics (YMA01) and IAS Mathematics (XMA01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check if eligible for both YMA01 and YFM01\n    if (canGetYMA01 && isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAL Mathematics (YMA01) and IAL Further Mathematics (YFM01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check if eligible for both YMA01 and XFM01\n    if (canGetYMA01 && isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAL Mathematics (YMA01) and IAS Further Mathematics (XFM01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check YMA01 and YPM01 conflict\n    if (isEligibleForYPM01 && canGetYMA01) {\n      setResult({\n        eligible: false,\n        message: \"Unfortunately, you are not eligible to proceed at this time. While you have sufficient units for both the YMA01 and YPM01 qualifications, these two qualifications cannot be cashed in during the same exam series.\"\n      });\n      return;\n    }\n\n    // Check if eligible for YFM01 alone\n    if (isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Further Mathematics qualification (YFM01)!\"\n      });\n      return;\n    }\n\n    // Check if eligible for YPM01 alone\n    if (isEligibleForYPM01 && selectedUnits.length >= 6) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Pure Mathematics qualification (YPM01)!\",\n        qualification: \"IAL Pure Mathematics (YPM01)\"\n      });\n      return;\n    }\n\n    // Check if eligible for XFM01 alone\n    if (isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Further Mathematics qualification (XFM01)!\"\n      });\n      return;\n    }\n\n    // Check for XPM01 eligibility (P1, P2, and FP1)\n    if (hasP1P2 && hasFP1 && !hasPureComplete) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Pure Mathematics qualification (XPM01)!\",\n        qualification: \"IAS Pure Mathematics (XPM01)\"\n      });\n      return;\n    }\n\n    // If they have FP1 but not enough units, give specific guidance\n    if (hasFP1) {\n      if (hasTwoFP) {\n        const appliedUnitsNeeded = 4 - totalAppliedUnits;\n        setResult({\n          eligible: false,\n          message: `You have two Further Pure units but need ${appliedUnitsNeeded} more applied unit${appliedUnitsNeeded > 1 ? 's' : ''} to be eligible for IAL Further Mathematics (YFM01).`\n        });\n      } else {\n        const unitsNeeded = 2 - totalUnitsForXFM01;\n        setResult({\n          eligible: false,\n          message: `You have FP1 but need ${unitsNeeded} more unit${unitsNeeded > 1 ? 's' : ''} (either Further Pure or Applied) to be eligible for IAS Further Mathematics (XFM01).`\n        });\n      }\n      return;\n    }\n\n    // Check Pure Mathematics requirements if not eligible for Further Mathematics\n    if (!hasPureComplete) {\n      let message = \"Missing one or more required Pure Mathematics units (P1-P4)\";\n\n      // Add recommendations for Further Mathematics if they're close\n      if (hasFP1) {\n        message += \". However, you could aim for IAS Further Mathematics (XFM01) by adding \" + (totalAppliedUnits === 0 ? \"two more units\" : totalAppliedUnits === 1 ? \"one more unit\" : \"\");\n      }\n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    // Check if eligible for IAS Mathematics alone\n    if (!hasPureComplete && !hasFP1) {\n      // Neither IAL Math nor IAS Further Math requirements met\n      let message = \"Missing required Pure Mathematics units (P1-P4) for IAL Mathematics and FP1 for IAS Further Mathematics\";\n      if (isEligibleForXMA01) {\n        message = \"You are eligible for IAS Mathematics (XMA01) only. To qualify for dual qualifications, you need all Pure units (P1-P4) and FP1 plus additional units.\";\n      }\n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n    if (!hasFP1) {\n      setResult({\n        eligible: false,\n        message: \"FP1 is required for IAS Further Mathematics. You qualify for IAL Mathematics (YMA01) but not for the Further Mathematics component.\"\n      });\n      return;\n    }\n\n    // Need at least 2 more units beyond FP1\n    const additionalUnitsNeeded = 2;\n    const additionalUnitsAvailable = totalAppliedUnits;\n    if (additionalUnitsAvailable < additionalUnitsNeeded) {\n      setResult({\n        eligible: false,\n        message: `You need ${additionalUnitsNeeded} additional units beyond FP1 for IAS Further Mathematics. You currently have ${additionalUnitsAvailable}. You qualify for IAL Mathematics (YMA01) but need more units for Further Mathematics.`\n      });\n      return;\n    }\n\n    // --- Rule-based check for YMA01 & YFM01 in dual mode ---\n    // YMA01: P1-P4 and a valid applied pair\n    // YFM01: (FP1, FP2, FP3) + 3 applied OR any 2 FP + 4 applied\n    const hasAllPure = pureUnits.every(unit => selectedUnits.includes(unit));\n    const appliedCount = allAppliedUnits.filter(unit => selectedUnits.includes(unit)).length;\n    const fpCount = furtherPureUnits.filter(unit => selectedUnits.includes(unit)).length;\n    const hasYFM01 = hasAllFP && appliedCount >= 3 || hasTwoFP && appliedCount >= 4;\n    const hasYMA01 = hasAllPure && validPairs.some(pair => pair.every(unit => selectedUnits.includes(unit)));\n    if (hasYMA01 && hasYFM01 && selectedUnits.length === 12) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the YMA01 & YFM01!\"\n      });\n      return;\n    }\n\n    // If no qualification is met, show a clear ineligible message\n    setResult({\n      eligible: false,\n      message: \"You are not eligible for any IAL Mathematics qualification with the selected units. Please review the requirements for each qualification and ensure you have the correct combination of Pure, Further Pure, and Applied Mathematics units. If you need help, consult the official Pearson guidance or your examination officer.\"\n    });\n  };\n\n  // --- UI Rendering Functions ---\n  // These functions render different sections of the calculator UI, such as the mode selector,\n  // information banner, qualification selector, unit selection panels, additional resources, and start over button.\n  // Each function returns a JSX block for its respective UI section.\n\n  const renderModeSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"text-lg font-semibold text-[#4A1D7A] mb-3\",\n      children: \"Qualification Mode\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 571,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-wrap gap-2 mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-md ${qualificationMode === 'standard' ? 'bg-[#4A1D7A] text-white' : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'}`,\n        onClick: () => setQualificationMode('standard'),\n        children: \"Standard Mathematics Eligibility\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 573,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: `px-4 py-2 rounded-md ${qualificationMode === 'dual' ? 'bg-[#4A1D7A] text-white' : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'}`,\n        onClick: () => setQualificationMode('dual'),\n        children: \"Dual Qualification Mode\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 583,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 572,\n      columnNumber: 7\n    }, this), qualificationMode === 'standard' ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-[#111827]\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Standard Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 598,\n          columnNumber: 13\n        }, this), \" Check eligibility for Mathematics (YMA01), Further Mathematics (YFM01), or IAS Further Mathematics qualifications. This mode now includes support for qualification combinations and transfer of credit options.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 597,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 596,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-sm text-[#111827]\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Dual Qualification Mode:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 604,\n          columnNumber: 13\n        }, this), \" Check if you are eligible to obtain both Mathematics (YMA01) and Further Mathematics (YFM01) qualifications with the selected units. This mode helps properly allocate units between the two qualifications.\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 603,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 602,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 570,\n    columnNumber: 5\n  }, this);\n  const renderInfoBanner = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#ECFDF5] p-4 rounded-lg mb-6 border border-[#059669]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-semibold text-[#111827]\",\n      children: \"Important Information About Unit Aggregation\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 613,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm mt-1 text-[#111827]\",\n      children: \"When combining different qualifications (e.g., IAL Mathematics with IAS Further Mathematics), you must ensure proper unit aggregation. Units previously cashed in may need to be uncashed before being used in a new qualification.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 614,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm mt-2 text-[#111827]\",\n      children: \"Please also make sure the candidate's UCI number and personal details are the same across all series to ensure proper unit aggregation.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 617,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      href: \"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\",\n      target: \"_blank\",\n      rel: \"noopener noreferrer\",\n      className: \"text-[#0369A1] hover:underline text-sm font-medium mt-2 inline-block\",\n      children: \"View detailed aggregation guidance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 620,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 612,\n    columnNumber: 5\n  }, this);\n  const renderQualificationSelector = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => setShowQualOptions(!showQualOptions),\n      className: \"w-full flex items-center justify-between bg-[#9B7FCB] hover:bg-[#4A1D7A] text-white p-3 rounded-md cursor-pointer transition-colors\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"font-medium\",\n        children: \"Additional Qualification Options\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 637,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `w-5 h-5 transition-transform ${showQualOptions ? 'transform rotate-180' : ''}`,\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeWidth: \"2\",\n          d: \"M19 9l-7 7-7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 644,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 638,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 633,\n      columnNumber: 7\n    }, this), showQualOptions && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-3 border border-[#9B7FCB] rounded-md p-4 bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"mb-3 text-sm\",\n        children: \"Select the combination of qualifications you are aiming for:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 650,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-1 md:grid-cols-2 gap-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-md cursor-pointer border ${selectedQualification === 'ial+ias' ? 'bg-[#ECFDF5] border-[#059669]' : 'bg-white border-gray-300 hover:bg-[#F3F4F6]'}`,\n          onClick: () => setSelectedQualification('ial+ias'),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold\",\n            children: \"IAL Mathematics + IAS Further Mathematics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 660,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-700\",\n            children: \"Full A Level Mathematics with AS Level Further Mathematics\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 661,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 652,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `p-4 rounded-md cursor-pointer border ${selectedQualification === 'transfer' ? 'bg-[#ECFDF5] border-[#059669]' : 'bg-white border-gray-300 hover:bg-[#F3F4F6]'}`,\n          onClick: () => setSelectedQualification('transfer'),\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            className: \"font-semibold\",\n            children: \"Transfer of Credit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 672,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"text-sm text-gray-700\",\n            children: \"Using qualifications from other exam boards\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 673,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 664,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 651,\n        columnNumber: 11\n      }, this), selectedQualification === 'ial+ias' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#FEF9C3] p-4 rounded-lg mt-4 border-l-4 border-[#CA8A04]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-[#111827]\",\n          children: \"Important Reminder for IAL + IAS Combinations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 679,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mt-1 text-[#111827]\",\n          children: \"If you have previously cashed in IAS Mathematics or Further Mathematics, you must uncash these qualifications when cashing in the IAL options to allow reaggregation of units.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 680,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mt-2 text-[#111827]\",\n          children: \"Your examination officer can help with the uncashing process, which must be completed before the IAL qualification can be awarded.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 684,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 678,\n        columnNumber: 13\n      }, this), selectedQualification === 'transfer' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-[#E6F7FF] p-4 rounded-lg mt-4 border border-[#0369A1]\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-[#111827]\",\n          children: \"Transfer of Credit Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 693,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm mt-1 text-[#111827]\",\n          children: \"If you are cashing in Edexcel IAL Mathematics with units from another exam board, you'll need to follow the Transfer of Credit process.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 694,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          className: \"text-sm mt-2 text-[#0369A1] hover:underline inline-block\",\n          children: \"Visit the Transfer of Credit page \\u2192\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 698,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold mt-4 text-[#111827]\",\n          children: \"Transfer of Credit Key Points:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 707,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-disc pl-5 text-sm mt-1 text-[#111827]\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"You must apply for Transfer of Credit before the qualification can be awarded\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 709,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Applications must be made via your examination officer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 710,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Evidence of the previously achieved qualification must be provided\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 711,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: \"Check deadline dates carefully - applications must be received before results day\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 712,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 708,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 692,\n        columnNumber: 13\n      }, this), selectedQualification === 'ial+ias' && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"font-semibold text-[#111827]\",\n          children: \"IAL Mathematics + IAS Further Mathematics Requirements:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 719,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid grid-cols-1 md:grid-cols-2 gap-4 mt-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"font-medium text-[#111827]\",\n              children: \"For IAL Mathematics:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 722,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc pl-5 text-sm text-[#111827]\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"P1, P2, P3, and P4\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 724,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"One valid pair from the applied units\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 725,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 723,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 721,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n              className: \"font-medium text-[#111827]\",\n              children: \"For IAS Further Mathematics:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 729,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              className: \"list-disc pl-5 text-sm text-[#111827]\",\n              children: [/*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"FP1 is required\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 731,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n                children: \"Two more units (cannot include P1-P4)\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 732,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 730,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 728,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 720,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 718,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 649,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 632,\n    columnNumber: 5\n  }, this);\n  const renderSection = (sectionKey, title, unitList) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mb-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center justify-between bg-[#4A1D7A] p-3 rounded-t-md cursor-pointer\",\n      onClick: () => toggleExpand(sectionKey),\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        className: \"text-white font-medium\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 749,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"svg\", {\n        className: `w-5 h-5 text-white transition-transform ${expandStates[sectionKey] ? 'transform rotate-180' : ''}`,\n        fill: \"none\",\n        viewBox: \"0 0 24 24\",\n        stroke: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          strokeLinecap: \"round\",\n          strokeWidth: \"2\",\n          d: \"M19 9l-7 7-7-7\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 756,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 750,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 745,\n      columnNumber: 7\n    }, this), expandStates[sectionKey] && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-white p-4 border border-[#9B7FCB] rounded-b-md shadow-inner grid grid-cols-2 md:grid-cols-3 gap-3\",\n      children: unitList.map(unit => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `p-2 rounded-md cursor-pointer transition-colors ${selectedUnits.includes(unit.code) ? 'bg-[#4A1D7A] text-white' : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'}`,\n        onClick: () => toggleUnit(unit.code),\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"font-bold\",\n          children: unit.code\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 772,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-sm\",\n          children: unit.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 773,\n          columnNumber: 15\n        }, this)]\n      }, unit.code, true, {\n        fileName: _jsxFileName,\n        lineNumber: 763,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 761,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 744,\n    columnNumber: 5\n  }, this);\n  const renderAdditionalResources = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-[#ECFDF5] p-4 rounded-lg mt-6 border border-[#059669]\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"font-semibold text-[#111827]\",\n      children: \"Additional Resources:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 783,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"flex items-center text-[#0369A1] hover:underline mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: \"\\uD83D\\uDCC4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 791,\n          columnNumber: 11\n        }, this), \"IAL Mathematics Aggregation Rules and Guidance\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://qualifications.pearson.com/en/qualifications/edexcel-international-advanced-levels/mathematics.html\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"flex items-center text-[#0369A1] hover:underline mb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: \"\\uD83D\\uDD17\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 800,\n          columnNumber: 11\n        }, this), \"Edexcel IAL Mathematics Qualification Page\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\",\n        target: \"_blank\",\n        rel: \"noopener noreferrer\",\n        className: \"flex items-center text-[#0369A1] hover:underline\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"mr-2\",\n          children: \"\\uD83D\\uDD04\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 809,\n          columnNumber: 11\n        }, this), \"Transfer of Credit Information\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 803,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 784,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 782,\n    columnNumber: 5\n  }, this);\n  const renderStartOverButton = () => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-8 mb-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onStartOver,\n      className: \"w-full bg-[#008F88] hover:bg-[#00B2A9] text-white font-medium py-3 px-4 rounded transition-colors duration-300 flex items-center justify-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n        xmlns: \"http://www.w3.org/2000/svg\",\n        className: \"h-5 w-5 mr-2\",\n        viewBox: \"0 0 20 20\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/_jsxDEV(\"path\", {\n          fillRule: \"evenodd\",\n          d: \"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\",\n          clipRule: \"evenodd\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 822,\n        columnNumber: 9\n      }, this), \"Start Over\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 818,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-sm text-gray-700 text-center mt-2\",\n      children: [\"Click \", /*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Start Over\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 828,\n        columnNumber: 15\n      }, this), \" to reset your unit selection and check different combinations.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 827,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 817,\n    columnNumber: 5\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white p-6 rounded-lg shadow-md relative\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-xl font-bold text-[#4A1D7A] mb-4\",\n      children: \"Mathematics Eligibility Calculator\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 835,\n      columnNumber: 7\n    }, this), selectedUnits.length > 0 && /*#__PURE__*/_jsxDEV(SelectedUnitsPanel, {\n      selectedUnits: selectedUnits\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 839,\n      columnNumber: 9\n    }, this), renderInfoBanner(), renderModeSelector(), renderQualificationSelector(), renderSection(\"pure\", \"Pure Mathematics\", units.pure), renderSection(\"further\", \"Further Pure Mathematics\", units.further), renderSection(\"applied\", \"Applied Mathematics\", units.applied), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"mt-6\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"w-full py-3 bg-[#00B2A9] hover:bg-[#008F88] text-white font-bold rounded-md shadow-lg transition-colors border-2 border-[#4A1D7A]\",\n        onClick: checkIALEligibility,\n        children: \"Check Eligibility\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 851,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 850,\n      columnNumber: 7\n    }, this), renderAdditionalResources(), renderStartOverButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 834,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"af9QviyC8REsGTSc+YYJT+Fs3OU=\");\n_c = Calculator;\nexport default Calculator;\n\n// --- End of Calculator component ---\n// This component manages all state, logic, and UI for the IAL Maths Eligibility Calculator.\n// It is designed to be maintainable and clear for future developers, with detailed comments throughout.\n// All eligibility logic and UI rendering is self-contained in this file. \nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","ReactGA","units","SelectedUnitsPanel","jsxDEV","_jsxDEV","Calculator","selectedUnits","setSelectedUnits","result","setResult","expandStates","setExpandStates","onStartOver","_s","qualificationMode","setQualificationMode","selectedQualification","setSelectedQualification","showQualOptions","setShowQualOptions","toggleExpand","section","event","category","action","label","toggleUnit","unitCode","includes","filter","code","checkIALEligibility","JSON","stringify","mode","qualification","length","Error","checkStandardEligibility","checkDualEligibility","error","message","eligible","pureUnits","furtherPureUnits","appliedUnits","unit","hasFP1","selectedFurtherPureUnits","hasP1P2","every","hasPureComplete","hasTwoFP","hasAllFP","totalAppliedUnits","isEligibleForYFM01","hasFP2","hasFP3","hasYPM01","hasXPM01","totalUnitsForXFM01","isEligibleForXFM01","validPairs","hasValidPair","some","pair","isEligibleForIAS","alternativeMessage","missingUnits","join","neededForIAS","push","possiblePairs","forEach","havePair","missingFromPair","xma01_xfm01_combinations","sortedSelected","sort","combo","slice","idx","yma01_yfm01_combinations","allAppliedUnits","isEligibleForXMA01","isEligibleForYPM01","canGetYMA01","appliedUnitsNeeded","unitsNeeded","additionalUnitsNeeded","additionalUnitsAvailable","hasAllPure","appliedCount","fpCount","hasYFM01","hasYMA01","renderModeSelector","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","renderInfoBanner","href","target","rel","renderQualificationSelector","fill","viewBox","stroke","strokeLinecap","strokeWidth","d","renderSection","sectionKey","title","unitList","map","name","renderAdditionalResources","renderStartOverButton","xmlns","fillRule","clipRule","pure","further","applied","_c","$RefreshReg$"],"sources":["/Users/leebeckett/Cursor/IALFinal/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport ReactGA from 'react-ga4';\nimport { units } from '../data/units';\nimport SelectedUnitsPanel from './SelectedUnitsPanel';\n\n// Calculator component: Main React component for the IAL Maths Eligibility Calculator UI and logic.\n// Props:\n// - selectedUnits: array of currently selected unit codes\n// - setSelectedUnits: function to update selected units\n// - result: eligibility result object\n// - setResult: function to update eligibility result\n// - expandStates: object tracking which unit panels are expanded\n// - setExpandStates: function to update expandStates\n// - onStartOver: function to reset the calculator\nfunction Calculator({ \n  selectedUnits, \n  setSelectedUnits, \n  result, \n  setResult, \n  expandStates, \n  setExpandStates,\n  onStartOver\n}) {\n  // --- State Hooks ---\n  // qualificationMode: 'standard' for single qualification, 'dual' for dual mode\n  const [qualificationMode, setQualificationMode] = useState('standard'); // 'standard' or 'dual'\n  // selectedQualification: tracks which additional qualification option is selected\n  const [selectedQualification, setSelectedQualification] = useState('ial+ias');\n  // showQualOptions: controls visibility of the additional qualification options panel\n  const [showQualOptions, setShowQualOptions] = useState(false);\n  \n  // toggleExpand: Expands or collapses a unit section (Pure, Further, Applied) and tracks the event in Google Analytics.\n  const toggleExpand = (section) => {\n    // Track section expansion/collapse\n    ReactGA.event({\n      category: 'UI',\n      action: expandStates[section] ? 'Collapse Section' : 'Expand Section',\n      label: section\n    });\n    \n    setExpandStates({\n      ...expandStates,\n      [section]: !expandStates[section]\n    });\n  };\n\n  // toggleUnit: Adds or removes a unit from the selectedUnits array and tracks the event in Google Analytics.\n  const toggleUnit = (unitCode) => {\n    // Track unit selection/deselection\n    ReactGA.event({\n      category: 'Unit',\n      action: selectedUnits.includes(unitCode) ? 'Deselect Unit' : 'Select Unit',\n      label: unitCode\n    });\n    \n    if (selectedUnits.includes(unitCode)) {\n      setSelectedUnits(selectedUnits.filter(code => code !== unitCode));\n    } else {\n      setSelectedUnits([...selectedUnits, unitCode]);\n    }\n  };\n\n  // checkIALEligibility: Main entry point for eligibility checking. Tracks the event, validates input, and delegates to standard or dual mode logic.\n  const checkIALEligibility = () => {\n    try {\n      // Track the eligibility check event\n      ReactGA.event({\n        category: 'Calculator',\n        action: 'Check Eligibility',\n        label: JSON.stringify({\n          units: selectedUnits,\n          mode: qualificationMode,\n          qualification: selectedQualification\n        })\n      });\n\n      if (selectedUnits.length === 0) {\n        throw new Error(\"Please select at least one unit\");\n      }\n\n      if (qualificationMode === 'standard') {\n        checkStandardEligibility();\n      } else {\n        checkDualEligibility();\n      }\n    } catch (error) {\n      // Track errors in eligibility check\n      ReactGA.event({\n        category: 'Error',\n        action: 'Eligibility Check Error',\n        label: error.message\n      });\n      \n      setResult({\n        eligible: false,\n        message: error.message\n      });\n    }\n  };\n\n  // checkStandardEligibility: Handles eligibility logic for standard (single qualification) mode.\n  // Contains logic for all single-qualification awards and provides detailed feedback for missing requirements.\n  const checkStandardEligibility = () => {\n    // Define constant arrays at the top\n    const pureUnits = [\"P1\", \"P2\", \"P3\", \"P4\"];\n    const furtherPureUnits = [\"FP1\", \"FP2\", \"FP3\"];\n    const appliedUnits = [\"S1\", \"S2\", \"S3\", \"M1\", \"M2\", \"M3\", \"D1\"].filter(unit => \n      selectedUnits.includes(unit)\n    );\n\n    // Check Further Pure requirements first\n    const hasFP1 = selectedUnits.includes(\"FP1\");\n    \n    // Count further pure units (FP1, FP2, FP3)\n    const selectedFurtherPureUnits = furtherPureUnits.filter(unit => \n      selectedUnits.includes(unit)\n    );\n\n    // Check for P1 and P2\n    const hasP1P2 = [\"P1\", \"P2\"].every(unit => selectedUnits.includes(unit));\n\n    // Check for all P units\n    const hasPureComplete = pureUnits.every(unit => selectedUnits.includes(unit));\n\n    // For YFM01 (IAL Further Mathematics)\n    // Must have either:\n    // 1. All three FP units plus three applied units, OR\n    // 2. Two FP units plus four applied units\n    const hasTwoFP = selectedFurtherPureUnits.length >= 2;\n    const hasAllFP = selectedFurtherPureUnits.length === 3;\n    const totalAppliedUnits = appliedUnits.length;\n    const isEligibleForYFM01 = (hasAllFP && totalAppliedUnits >= 3) || \n                              (hasTwoFP && totalAppliedUnits >= 4);\n\n    // Check YFM01 eligibility first\n    if (isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Further Mathematics qualification (YFM01)!\",\n        qualification: \"IAL Further Mathematics (YFM01)\"\n      });\n      return;\n    }\n\n    // Check for YPM01 eligibility (P1-P4, FP1, and FP2 or FP3)\n    const hasFP2 = selectedUnits.includes(\"FP2\");\n    const hasFP3 = selectedUnits.includes(\"FP3\");\n    const hasYPM01 = hasPureComplete && selectedUnits.includes(\"FP1\") && (hasFP2 || hasFP3);\n    // Check for XPM01 eligibility (P1-P4 and FP1 only)\n    const hasXPM01 = hasPureComplete && selectedUnits.includes(\"FP1\") && !hasFP2 && !hasFP3;\n\n    // Check YPM01 eligibility first\n    if (hasYPM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Pure Mathematics qualification (YPM01)!\",\n        qualification: \"IAL Pure Mathematics (YPM01)\"\n      });\n      return;\n    }\n\n    // Check XPM01 eligibility\n    if (hasXPM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Pure Mathematics qualification (XPM01)!\",\n        qualification: \"IAS Pure Mathematics (XPM01)\"\n      });\n      return;\n    }\n\n    // For XFM01 (IAS Further Mathematics)\n    // Must have FP1 plus two additional units (can be further pure or applied)\n    const totalUnitsForXFM01 = (selectedFurtherPureUnits.length - 1) + appliedUnits.length; // -1 because we don't count FP1 twice\n    const isEligibleForXFM01 = hasFP1 && totalUnitsForXFM01 >= 2;\n\n    // Check XFM01 eligibility\n    if (isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Further Mathematics qualification (XFM01)!\",\n        qualification: \"IAS Further Mathematics (XFM01)\"\n      });\n      return;\n    }\n\n    // Check for valid applied pairs for IAL\n    const validPairs = [\n      [\"S1\", \"S2\"], [\"M1\", \"M2\"], [\"S1\", \"M1\"], \n      [\"S1\", \"D1\"], [\"M1\", \"D1\"]\n    ];\n    const hasValidPair = validPairs.some(pair => \n      pair.every(unit => selectedUnits.includes(unit))\n    );\n\n    // Check if user is eligible for IAS Mathematics\n    const isEligibleForIAS = hasP1P2 && appliedUnits.length >= 1;\n\n    if (!hasPureComplete && isEligibleForIAS) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Mathematics qualification (XMA01), but not for the full IAL Mathematics (YMA01).\",\n        qualification: \"IAS Mathematics (XMA01)\",\n        alternativeMessage: \"To be eligible for IAL Mathematics (YMA01), you need to complete all Pure units (P1-P4) and have a valid applied pair.\"\n      });\n      return;\n    }\n\n    if (!hasPureComplete) {\n      let message = \"Missing one or more required Pure Mathematics units (P1-P4)\";\n      \n      // If they have some pure units, be more specific\n      if (pureUnits.filter(unit => selectedUnits.includes(unit)).length > 0) {\n        const missingUnits = pureUnits.filter(unit => !selectedUnits.includes(unit));\n        message = `Missing ${missingUnits.join(\", \")} from the required Pure Mathematics units`;\n      }\n      \n      // Add recommendations if they're close to IAS\n      if (pureUnits.filter(unit => selectedUnits.includes(unit)).length >= 1) {\n        const neededForIAS = [];\n        if (!selectedUnits.includes(\"P1\")) neededForIAS.push(\"P1\");\n        if (!selectedUnits.includes(\"P2\")) neededForIAS.push(\"P2\");\n        if (appliedUnits.length === 0) neededForIAS.push(\"one applied unit\");\n        \n        message += `. You could aim for IAS Mathematics (XMA01) by adding ${neededForIAS.join(\" and \")}.`;\n      }\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    if (!hasValidPair) {\n      // Construct helpful message about what pairs they could add\n      let message = \"Missing a valid applied pair. You need one of: \";\n      const possiblePairs = [];\n      \n      validPairs.forEach(pair => {\n        const havePair = pair.filter(unit => selectedUnits.includes(unit));\n        const missingFromPair = pair.filter(unit => !selectedUnits.includes(unit));\n        \n        if (havePair.length === 1) {\n          possiblePairs.push(`${havePair[0]}+${missingFromPair[0]}`);\n        } else if (havePair.length === 0) {\n          possiblePairs.push(`${pair[0]}+${pair[1]}`);\n        }\n      });\n      \n      message += possiblePairs.join(\", \");\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    setResult({\n      eligible: true,\n      message: \"You are eligible for the IAL Mathematics qualification (YMA01)!\"\n    });\n  };\n\n  // checkDualEligibility: Handles eligibility logic for dual mode (multiple awards).\n  // Contains custom checks for specific dual combinations, then falls back to rule-based logic for all other cases.\n  const checkDualEligibility = () => {\n    // --- Custom XMA01 & XFM01 message for specific 6-unit combinations ---\n    if (selectedUnits.length === 6) {\n      const xma01_xfm01_combinations = [\n        [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"FP3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"M2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"M3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"S1\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"S2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"S3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP2\", \"D1\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"M2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"M3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"S1\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"S2\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"S3\"], [\"P1\", \"P2\", \"M1\", \"FP1\", \"FP3\", \"D1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"FP3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"M1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"M2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"M3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"S2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"S3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP2\", \"D1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"M1\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"M2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"M3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"S2\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"S3\"], [\"P1\", \"P2\", \"S1\", \"FP1\", \"FP3\", \"D1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"FP3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"M1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"M2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"M3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"S1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"S2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP2\", \"S3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"M1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"M2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"M3\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"S1\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"S2\"], [\"P1\", \"P2\", \"D1\", \"FP1\", \"FP3\", \"S3\"]\n      ];\n      const sortedSelected = [...selectedUnits].sort();\n      for (const combo of xma01_xfm01_combinations) {\n        if (combo.slice().sort().every((unit, idx) => unit === sortedSelected[idx])) {\n          setResult({ eligible: true, message: \"You are eligible for the XMA01 & XFM01!\" });\n          return;\n        }\n      }\n    }\n\n    // --- Custom YMA01 & YFM01 message for specific 12-unit combinations ---\n    if (selectedUnits.length === 12) {\n      const yma01_yfm01_combinations = [\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"S1\", \"FP1\", \"FP2\", \"FP3\", \"S2\", \"S3\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"S1\", \"FP1\", \"FP2\", \"FP3\", \"D1\", \"M2\", \"M3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"M2\", \"M3\", \"S1\", \"S2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"M2\", \"M3\", \"S1\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"M3\", \"S1\", \"S2\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP3\", \"M2\", \"M3\", \"S1\", \"S2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP3\", \"M2\", \"M3\", \"S1\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP3\", \"M3\", \"S1\", \"S2\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"M2\", \"M3\", \"S1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"M3\", \"S1\", \"S2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"S1\", \"S2\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"M3\", \"S1\", \"S2\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"M3\", \"S1\", \"S2\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"S1\", \"S2\", \"S3\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP3\", \"M3\", \"S1\", \"S2\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP3\", \"M3\", \"S1\", \"S2\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP3\", \"S1\", \"S2\", \"S3\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"FP3\", \"M3\", \"S1\", \"S2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"FP3\", \"S1\", \"S2\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"M1\", \"M2\", \"FP1\", \"FP2\", \"FP3\", \"S2\", \"S3\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"S2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"S2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"D1\", \"FP1\", \"FP2\", \"FP3\", \"M1\", \"M2\", \"M3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"M1\", \"M2\", \"M3\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"S3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP3\", \"M1\", \"M2\", \"M3\", \"D1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"M1\", \"M2\", \"M3\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"S3\", \"D1\", \"M1\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"D1\", \"M1\", \"M2\"],\n        [\"P1\", \"P2\", \"P3\", \"P4\", \"S1\", \"S2\", \"FP1\", \"FP2\", \"FP3\", \"D1\", \"M2\", \"M3\"]\n      ];\n      const sortedSelected = [...selectedUnits].sort();\n      for (const combo of yma01_yfm01_combinations) {\n        if (combo.slice().sort().every((unit, idx) => unit === sortedSelected[idx])) {\n          setResult({ eligible: true, message: \"You are eligible for the YMA01 & YFM01!\" });\n          return;\n        }\n      }\n    }\n\n    // Define constant arrays at the top\n    const pureUnits = [\"P1\", \"P2\", \"P3\", \"P4\"];\n    const furtherPureUnits = [\"FP1\", \"FP2\", \"FP3\"];\n    const allAppliedUnits = [\"S1\", \"S2\", \"S3\", \"M1\", \"M2\", \"M3\", \"D1\"];\n    \n    // Check Further Pure requirements first\n    const hasFP1 = selectedUnits.includes(\"FP1\");\n    \n    // Count further pure units (FP1, FP2, FP3)\n    const selectedFurtherPureUnits = furtherPureUnits.filter(unit => \n      selectedUnits.includes(unit)\n    );\n    \n    // Count all applied units\n    const appliedUnits = allAppliedUnits.filter(unit => \n      selectedUnits.includes(unit)\n    );\n\n    // Check for P1 and P2\n    const hasP1P2 = [\"P1\", \"P2\"].every(unit => selectedUnits.includes(unit));\n\n    // Check for all P units\n    const hasPureComplete = pureUnits.every(unit => selectedUnits.includes(unit));\n\n    // For YFM01 (IAL Further Mathematics)\n    // Must have either:\n    // 1. All three FP units plus three applied units, OR\n    // 2. Two FP units plus four applied units\n    const hasTwoFP = selectedFurtherPureUnits.length >= 2;\n    const hasAllFP = selectedFurtherPureUnits.length === 3;\n    const totalAppliedUnits = appliedUnits.length;\n    const isEligibleForYFM01 = (hasAllFP && totalAppliedUnits >= 3) || \n                              (hasTwoFP && totalAppliedUnits >= 4);\n\n    // For XFM01 (IAS Further Mathematics)\n    // Must have FP1 plus two additional units (can be further pure or applied)\n    const totalUnitsForXFM01 = selectedFurtherPureUnits.length + appliedUnits.length - 1; // -1 because we don't count FP1 twice\n    const isEligibleForXFM01 = hasFP1 && totalUnitsForXFM01 >= 2;\n    \n    // Check for valid applied pairs for IAL\n    const validPairs = [\n      [\"S1\", \"S2\"], [\"M1\", \"M2\"], [\"S1\", \"M1\"], \n      [\"S1\", \"D1\"], [\"M1\", \"D1\"]\n    ];\n    const hasValidPair = validPairs.some(pair => \n      pair.every(unit => selectedUnits.includes(unit))\n    );\n    \n    // Check if eligible for IAS Mathematics (XMA01)\n    const isEligibleForXMA01 = hasP1P2 && appliedUnits.length >= 1;\n    \n    // Check if eligible for Pure Mathematics (YPM01)\n    // Must have P1, P2, P3, P4, FP1, and (FP2 or FP3)\n    const hasFP2 = selectedUnits.includes(\"FP2\");\n    const hasFP3 = selectedUnits.includes(\"FP3\");\n    const isEligibleForYPM01 = hasPureComplete && selectedUnits.includes(\"FP1\") && (hasFP2 || hasFP3);\n    \n    // Check if student can get YMA01 (P1-P4 + valid applied pair)\n    const canGetYMA01 = hasPureComplete && hasValidPair;\n\n    // Check if eligible for both XFM01 and YFM01\n    if (isEligibleForXFM01 && isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAS Further Mathematics (XFM01) and IAL Further Mathematics (YFM01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check if eligible for both YMA01 and XMA01\n    if (hasPureComplete && appliedUnits.length >= 1) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAL Mathematics (YMA01) and IAS Mathematics (XMA01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check if eligible for both YMA01 and YFM01\n    if (canGetYMA01 && isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAL Mathematics (YMA01) and IAL Further Mathematics (YFM01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check if eligible for both YMA01 and XFM01\n    if (canGetYMA01 && isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for both IAL Mathematics (YMA01) and IAS Further Mathematics (XFM01) qualifications!\"\n      });\n      return;\n    }\n\n    // Check YMA01 and YPM01 conflict\n    if (isEligibleForYPM01 && canGetYMA01) {\n      setResult({\n        eligible: false,\n        message: \"Unfortunately, you are not eligible to proceed at this time. While you have sufficient units for both the YMA01 and YPM01 qualifications, these two qualifications cannot be cashed in during the same exam series.\"\n      });\n      return;\n    }\n\n    // Check if eligible for YFM01 alone\n    if (isEligibleForYFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Further Mathematics qualification (YFM01)!\"\n      });\n      return;\n    }\n\n    // Check if eligible for YPM01 alone\n    if (isEligibleForYPM01 && selectedUnits.length >= 6) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAL Pure Mathematics qualification (YPM01)!\",\n        qualification: \"IAL Pure Mathematics (YPM01)\"\n      });\n      return;\n    }\n\n    // Check if eligible for XFM01 alone\n    if (isEligibleForXFM01) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Further Mathematics qualification (XFM01)!\"\n      });\n      return;\n    }\n\n    // Check for XPM01 eligibility (P1, P2, and FP1)\n    if (hasP1P2 && hasFP1 && !hasPureComplete) {\n      setResult({\n        eligible: true,\n        message: \"You are eligible for the IAS Pure Mathematics qualification (XPM01)!\",\n        qualification: \"IAS Pure Mathematics (XPM01)\"\n      });\n      return;\n    }\n\n    // If they have FP1 but not enough units, give specific guidance\n    if (hasFP1) {\n      if (hasTwoFP) {\n        const appliedUnitsNeeded = 4 - totalAppliedUnits;\n        setResult({\n          eligible: false,\n          message: `You have two Further Pure units but need ${appliedUnitsNeeded} more applied unit${appliedUnitsNeeded > 1 ? 's' : ''} to be eligible for IAL Further Mathematics (YFM01).`\n        });\n      } else {\n        const unitsNeeded = 2 - totalUnitsForXFM01;\n        setResult({\n          eligible: false,\n          message: `You have FP1 but need ${unitsNeeded} more unit${unitsNeeded > 1 ? 's' : ''} (either Further Pure or Applied) to be eligible for IAS Further Mathematics (XFM01).`\n        });\n      }\n      return;\n    }\n\n    // Check Pure Mathematics requirements if not eligible for Further Mathematics\n    if (!hasPureComplete) {\n      let message = \"Missing one or more required Pure Mathematics units (P1-P4)\";\n      \n      // Add recommendations for Further Mathematics if they're close\n      if (hasFP1) {\n        message += \". However, you could aim for IAS Further Mathematics (XFM01) by adding \" + \n                  (totalAppliedUnits === 0 ? \"two more units\" : \n                   totalAppliedUnits === 1 ? \"one more unit\" : \"\");\n      }\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    // Check if eligible for IAS Mathematics alone\n    if (!hasPureComplete && !hasFP1) {\n      // Neither IAL Math nor IAS Further Math requirements met\n      let message = \"Missing required Pure Mathematics units (P1-P4) for IAL Mathematics and FP1 for IAS Further Mathematics\";\n      \n      if (isEligibleForXMA01) {\n        message = \"You are eligible for IAS Mathematics (XMA01) only. To qualify for dual qualifications, you need all Pure units (P1-P4) and FP1 plus additional units.\";\n      }\n      \n      setResult({\n        eligible: false,\n        message: message\n      });\n      return;\n    }\n\n    if (!hasFP1) {\n      setResult({\n        eligible: false,\n        message: \"FP1 is required for IAS Further Mathematics. You qualify for IAL Mathematics (YMA01) but not for the Further Mathematics component.\"\n      });\n      return;\n    }\n\n    // Need at least 2 more units beyond FP1\n    const additionalUnitsNeeded = 2;\n    const additionalUnitsAvailable = totalAppliedUnits;\n\n    if (additionalUnitsAvailable < additionalUnitsNeeded) {\n      setResult({\n        eligible: false,\n        message: `You need ${additionalUnitsNeeded} additional units beyond FP1 for IAS Further Mathematics. You currently have ${additionalUnitsAvailable}. You qualify for IAL Mathematics (YMA01) but need more units for Further Mathematics.`\n      });\n      return;\n    }\n\n    // --- Rule-based check for YMA01 & YFM01 in dual mode ---\n    // YMA01: P1-P4 and a valid applied pair\n    // YFM01: (FP1, FP2, FP3) + 3 applied OR any 2 FP + 4 applied\n    const hasAllPure = pureUnits.every(unit => selectedUnits.includes(unit));\n    const appliedCount = allAppliedUnits.filter(unit => selectedUnits.includes(unit)).length;\n    const fpCount = furtherPureUnits.filter(unit => selectedUnits.includes(unit)).length;\n    const hasYFM01 = (hasAllFP && appliedCount >= 3) || (hasTwoFP && appliedCount >= 4);\n    const hasYMA01 = hasAllPure && validPairs.some(pair => pair.every(unit => selectedUnits.includes(unit)));\n    if (hasYMA01 && hasYFM01 && selectedUnits.length === 12) {\n      setResult({ eligible: true, message: \"You are eligible for the YMA01 & YFM01!\" });\n      return;\n    }\n\n    // If no qualification is met, show a clear ineligible message\n    setResult({\n      eligible: false,\n      message: \"You are not eligible for any IAL Mathematics qualification with the selected units. Please review the requirements for each qualification and ensure you have the correct combination of Pure, Further Pure, and Applied Mathematics units. If you need help, consult the official Pearson guidance or your examination officer.\"\n    });\n  };\n\n  // --- UI Rendering Functions ---\n  // These functions render different sections of the calculator UI, such as the mode selector,\n  // information banner, qualification selector, unit selection panels, additional resources, and start over button.\n  // Each function returns a JSX block for its respective UI section.\n\n  const renderModeSelector = () => (\n    <div className=\"mb-6\">\n      <h3 className=\"text-lg font-semibold text-[#4A1D7A] mb-3\">Qualification Mode</h3>\n      <div className=\"flex flex-wrap gap-2 mb-4\">\n        <button\n          className={`px-4 py-2 rounded-md ${\n            qualificationMode === 'standard'\n              ? 'bg-[#4A1D7A] text-white'\n              : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'\n          }`}\n          onClick={() => setQualificationMode('standard')}\n        >\n          Standard Mathematics Eligibility\n        </button>\n        <button\n          className={`px-4 py-2 rounded-md ${\n            qualificationMode === 'dual'\n              ? 'bg-[#4A1D7A] text-white'\n              : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'\n          }`}\n          onClick={() => setQualificationMode('dual')}\n        >\n          Dual Qualification Mode\n        </button>\n      </div>\n      \n      {qualificationMode === 'standard' ? (\n        <div className=\"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\">\n          <p className=\"text-sm text-[#111827]\">\n            <strong>Standard Mode:</strong> Check eligibility for Mathematics (YMA01), Further Mathematics (YFM01), or IAS Further Mathematics qualifications. This mode now includes support for qualification combinations and transfer of credit options.\n          </p>\n        </div>\n      ) : (\n        <div className=\"bg-[#E6F7FF] p-4 rounded-lg border-l-4 border-[#0369A1]\">\n          <p className=\"text-sm text-[#111827]\">\n            <strong>Dual Qualification Mode:</strong> Check if you are eligible to obtain both Mathematics (YMA01) and Further Mathematics (YFM01) qualifications with the selected units. This mode helps properly allocate units between the two qualifications.\n          </p>\n        </div>\n      )}\n    </div>\n  );\n\n  const renderInfoBanner = () => (\n    <div className=\"bg-[#ECFDF5] p-4 rounded-lg mb-6 border border-[#059669]\">\n      <h3 className=\"font-semibold text-[#111827]\">Important Information About Unit Aggregation</h3>\n      <p className=\"text-sm mt-1 text-[#111827]\">\n        When combining different qualifications (e.g., IAL Mathematics with IAS Further Mathematics), you must ensure proper unit aggregation. Units previously cashed in may need to be uncashed before being used in a new qualification.\n      </p>\n      <p className=\"text-sm mt-2 text-[#111827]\">\n        Please also make sure the candidate's UCI number and personal details are the same across all series to ensure proper unit aggregation.\n      </p>\n      <a \n        href=\"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\" \n        target=\"_blank\" \n        rel=\"noopener noreferrer\"\n        className=\"text-[#0369A1] hover:underline text-sm font-medium mt-2 inline-block\"\n      >\n        View detailed aggregation guidance\n      </a>\n    </div>\n  );\n\n  const renderQualificationSelector = () => (\n    <div className=\"mb-6\">\n      <button\n        onClick={() => setShowQualOptions(!showQualOptions)}\n        className=\"w-full flex items-center justify-between bg-[#9B7FCB] hover:bg-[#4A1D7A] text-white p-3 rounded-md cursor-pointer transition-colors\"\n      >\n        <h3 className=\"font-medium\">Additional Qualification Options</h3>\n        <svg \n          className={`w-5 h-5 transition-transform ${showQualOptions ? 'transform rotate-180' : ''}`}\n          fill=\"none\" \n          viewBox=\"0 0 24 24\" \n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </button>\n      \n      {showQualOptions && (\n        <div className=\"mt-3 border border-[#9B7FCB] rounded-md p-4 bg-white\">\n          <p className=\"mb-3 text-sm\">Select the combination of qualifications you are aiming for:</p>\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-3\">\n            <div \n              className={`p-4 rounded-md cursor-pointer border ${\n                selectedQualification === 'ial+ias' \n                  ? 'bg-[#ECFDF5] border-[#059669]' \n                  : 'bg-white border-gray-300 hover:bg-[#F3F4F6]'\n              }`}\n              onClick={() => setSelectedQualification('ial+ias')}\n            >\n              <h4 className=\"font-semibold\">IAL Mathematics + IAS Further Mathematics</h4>\n              <p className=\"text-sm text-gray-700\">Full A Level Mathematics with AS Level Further Mathematics</p>\n            </div>\n            \n            <div \n              className={`p-4 rounded-md cursor-pointer border ${\n                selectedQualification === 'transfer' \n                  ? 'bg-[#ECFDF5] border-[#059669]' \n                  : 'bg-white border-gray-300 hover:bg-[#F3F4F6]'\n              }`}\n              onClick={() => setSelectedQualification('transfer')}\n            >\n              <h4 className=\"font-semibold\">Transfer of Credit</h4>\n              <p className=\"text-sm text-gray-700\">Using qualifications from other exam boards</p>\n            </div>\n          </div>\n          \n          {selectedQualification === 'ial+ias' && (\n            <div className=\"bg-[#FEF9C3] p-4 rounded-lg mt-4 border-l-4 border-[#CA8A04]\">\n              <h4 className=\"font-semibold text-[#111827]\">Important Reminder for IAL + IAS Combinations</h4>\n              <p className=\"text-sm mt-1 text-[#111827]\">\n                If you have previously cashed in IAS Mathematics or Further Mathematics, you must uncash these qualifications\n                when cashing in the IAL options to allow reaggregation of units.\n              </p>\n              <p className=\"text-sm mt-2 text-[#111827]\">\n                Your examination officer can help with the uncashing process, which must be completed before the IAL qualification\n                can be awarded.\n              </p>\n            </div>\n          )}\n          \n          {selectedQualification === 'transfer' && (\n            <div className=\"bg-[#E6F7FF] p-4 rounded-lg mt-4 border border-[#0369A1]\">\n              <h4 className=\"font-semibold text-[#111827]\">Transfer of Credit Information</h4>\n              <p className=\"text-sm mt-1 text-[#111827]\">\n                If you are cashing in Edexcel IAL Mathematics with units from another exam board, you'll need to follow the Transfer\n                of Credit process.\n              </p>\n              <a \n                href=\"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\" \n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                className=\"text-sm mt-2 text-[#0369A1] hover:underline inline-block\"\n              >\n                Visit the Transfer of Credit page →\n              </a>\n              \n              <h4 className=\"font-semibold mt-4 text-[#111827]\">Transfer of Credit Key Points:</h4>\n              <ul className=\"list-disc pl-5 text-sm mt-1 text-[#111827]\">\n                <li>You must apply for Transfer of Credit before the qualification can be awarded</li>\n                <li>Applications must be made via your examination officer</li>\n                <li>Evidence of the previously achieved qualification must be provided</li>\n                <li>Check deadline dates carefully - applications must be received before results day</li>\n              </ul>\n            </div>\n          )}\n          \n          {selectedQualification === 'ial+ias' && (\n            <div className=\"mt-4\">\n              <h4 className=\"font-semibold text-[#111827]\">IAL Mathematics + IAS Further Mathematics Requirements:</h4>\n              <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-2\">\n                <div>\n                  <h5 className=\"font-medium text-[#111827]\">For IAL Mathematics:</h5>\n                  <ul className=\"list-disc pl-5 text-sm text-[#111827]\">\n                    <li>P1, P2, P3, and P4</li>\n                    <li>One valid pair from the applied units</li>\n                  </ul>\n                </div>\n                <div>\n                  <h5 className=\"font-medium text-[#111827]\">For IAS Further Mathematics:</h5>\n                  <ul className=\"list-disc pl-5 text-sm text-[#111827]\">\n                    <li>FP1 is required</li>\n                    <li>Two more units (cannot include P1-P4)</li>\n                  </ul>\n                </div>\n              </div>\n            </div>\n          )}\n        </div>\n      )}\n    </div>\n  );\n\n  const renderSection = (sectionKey, title, unitList) => (\n    <div className=\"mb-6\">\n      <div \n        className=\"flex items-center justify-between bg-[#4A1D7A] p-3 rounded-t-md cursor-pointer\"\n        onClick={() => toggleExpand(sectionKey)}\n      >\n        <h3 className=\"text-white font-medium\">{title}</h3>\n        <svg \n          className={`w-5 h-5 text-white transition-transform ${expandStates[sectionKey] ? 'transform rotate-180' : ''}`}\n          fill=\"none\" \n          viewBox=\"0 0 24 24\" \n          stroke=\"currentColor\"\n        >\n          <path strokeLinecap=\"round\" strokeWidth=\"2\" d=\"M19 9l-7 7-7-7\" />\n        </svg>\n      </div>\n\n      {expandStates[sectionKey] && (\n        <div className=\"bg-white p-4 border border-[#9B7FCB] rounded-b-md shadow-inner grid grid-cols-2 md:grid-cols-3 gap-3\">\n          {unitList.map(unit => (\n            <div \n              key={unit.code}\n              className={`p-2 rounded-md cursor-pointer transition-colors ${\n                selectedUnits.includes(unit.code)\n                  ? 'bg-[#4A1D7A] text-white' \n                  : 'bg-[#D1C4E9] text-[#111827] hover:bg-[#9B7FCB] hover:text-white'\n              }`}\n              onClick={() => toggleUnit(unit.code)}\n            >\n              <div className=\"font-bold\">{unit.code}</div>\n              <div className=\"text-sm\">{unit.name}</div>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n\n  const renderAdditionalResources = () => (\n    <div className=\"bg-[#ECFDF5] p-4 rounded-lg mt-6 border border-[#059669]\">\n      <h3 className=\"font-semibold text-[#111827]\">Additional Resources:</h3>\n      <div className=\"mt-2\">\n        <a \n          href=\"https://qualifications.pearson.com/content/dam/pdf/International%20Advanced%20Level/Mathematics/2018/Teaching-and-Learning-Materials/aggregation-rules-and-guidance.pdf\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"flex items-center text-[#0369A1] hover:underline mb-2\"\n        >\n          <span className=\"mr-2\">📄</span>\n          IAL Mathematics Aggregation Rules and Guidance\n        </a>\n        <a \n          href=\"https://qualifications.pearson.com/en/qualifications/edexcel-international-advanced-levels/mathematics.html\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"flex items-center text-[#0369A1] hover:underline mb-2\"\n        >\n          <span className=\"mr-2\">🔗</span>\n          Edexcel IAL Mathematics Qualification Page\n        </a>\n        <a \n          href=\"https://qualifications.pearson.com/en/support/support-topics/exams/special-requirements/transfer-of-credit.html\" \n          target=\"_blank\" \n          rel=\"noopener noreferrer\"\n          className=\"flex items-center text-[#0369A1] hover:underline\"\n        >\n          <span className=\"mr-2\">🔄</span>\n          Transfer of Credit Information\n        </a>\n      </div>\n    </div>\n  );\n  \n  const renderStartOverButton = () => (\n    <div className=\"mt-8 mb-4\">\n      <button \n        onClick={onStartOver}\n        className=\"w-full bg-[#008F88] hover:bg-[#00B2A9] text-white font-medium py-3 px-4 rounded transition-colors duration-300 flex items-center justify-center\"\n      >\n        <svg xmlns=\"http://www.w3.org/2000/svg\" className=\"h-5 w-5 mr-2\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n          <path fillRule=\"evenodd\" d=\"M4 2a1 1 0 011 1v2.101a7.002 7.002 0 0111.601 2.566 1 1 0 11-1.885.666A5.002 5.002 0 005.999 7H9a1 1 0 010 2H4a1 1 0 01-1-1V3a1 1 0 011-1zm.008 9.057a1 1 0 011.276.61A5.002 5.002 0 0014.001 13H11a1 1 0 110-2h5a1 1 0 011 1v5a1 1 0 11-2 0v-2.101a7.002 7.002 0 01-11.601-2.566 1 1 0 01.61-1.276z\" clipRule=\"evenodd\" />\n        </svg>\n        Start Over\n      </button>\n      <p className=\"text-sm text-gray-700 text-center mt-2\">\n        Click <strong>Start Over</strong> to reset your unit selection and check different combinations.\n      </p>\n    </div>\n  );\n\n  return (\n    <div className=\"bg-white p-6 rounded-lg shadow-md relative\">\n      <h2 className=\"text-xl font-bold text-[#4A1D7A] mb-4\">Mathematics Eligibility Calculator</h2>\n      \n      {/* Floating Selected Units Panel */}\n      {selectedUnits.length > 0 && (\n        <SelectedUnitsPanel selectedUnits={selectedUnits} />\n      )}\n      \n      {renderInfoBanner()}\n      {renderModeSelector()}\n      {renderQualificationSelector()}\n      \n      {renderSection(\"pure\", \"Pure Mathematics\", units.pure)}\n      {renderSection(\"further\", \"Further Pure Mathematics\", units.further)}\n      {renderSection(\"applied\", \"Applied Mathematics\", units.applied)}\n\n      <div className=\"mt-6\">\n        <button \n          className=\"w-full py-3 bg-[#00B2A9] hover:bg-[#008F88] text-white font-bold rounded-md shadow-lg transition-colors border-2 border-[#4A1D7A]\"\n          onClick={checkIALEligibility}\n        >\n          Check Eligibility\n        </button>\n      </div>\n\n      {renderAdditionalResources()}\n      {renderStartOverButton()}\n    </div>\n  );\n}\n\nexport default Calculator;\n\n// --- End of Calculator component ---\n// This component manages all state, logic, and UI for the IAL Maths Eligibility Calculator.\n// It is designed to be maintainable and clear for future developers, with detailed comments throughout.\n// All eligibility logic and UI rendering is self-contained in this file. "],"mappings":"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,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,EAAE,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAC1hD;MACD,MAAMC,cAAc,GAAG,CAAC,GAAGvE,aAAa,CAAC,CAACwE,IAAI,CAAC,CAAC;MAChD,KAAK,MAAMC,KAAK,IAAIH,wBAAwB,EAAE;QAC5C,IAAIG,KAAK,CAACC,KAAK,CAAC,CAAC,CAACF,IAAI,CAAC,CAAC,CAAC5B,KAAK,CAAC,CAACJ,IAAI,EAAEmC,GAAG,KAAKnC,IAAI,KAAK+B,cAAc,CAACI,GAAG,CAAC,CAAC,EAAE;UAC3ExE,SAAS,CAAC;YAAEiC,QAAQ,EAAE,IAAI;YAAED,OAAO,EAAE;UAA0C,CAAC,CAAC;UACjF;QACF;MACF;IACF;;IAEA;IACA,IAAInC,aAAa,CAAC8B,MAAM,KAAK,EAAE,EAAE;MAC/B,MAAM8C,wBAAwB,GAAG,CAC/B,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC3E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,EAC1E,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EA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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}